<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>ProjectLCore.GameActions Namespace</title><meta name="Title" content="ProjectLCore.GameActions" /><meta name="Help.Id" content="N:ProjectLCore.GameActions" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="ProjectLCore.GameActions" /><meta name="guid" content="N_ProjectLCore_GameActions" /><meta name="tocFile" content="../toc/IDBA.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">Project L Core Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Project<wbr />LCore.<wbr />Game<wbr />Actions Namespace</h1><div class="summary"> </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Classes</h2><div id="IDBCASection"><table id="classList" class="table is-hoverable"><tr><td><a href="T_ProjectLCore_GameActions_ActionProcessorBase.htm">ActionProcessorBase</a></td><td>
            A base class for processing actions using the visitor pattern.
            Each action should be verified by an <a href="T_ProjectLCore_GameActions_Verification_ActionVerifier.htm">ActionVerifier</a> before being processed.
            </td></tr><tr><td><a href="T_ProjectLCore_GameActions_AsyncActionProcessorBase.htm">AsyncActionProcessorBase</a></td><td>
            A base class for asynchronously processing actions using the visitor pattern.
            Each action should be verified by an <a href="T_ProjectLCore_GameActions_Verification_ActionVerifier.htm">ActionVerifier</a> before being processed.
            </td></tr><tr><td><a href="T_ProjectLCore_GameActions_DoNothingAction.htm">DoNothingAction</a></td><td>
            Last resort action for AI players, they should never actually need to use it. It will always be accepted unless the game phase is <a href="T_ProjectLCore_GameLogic_GamePhase.htm">FinishingTouches</a>.
            </td></tr><tr><td><a href="T_ProjectLCore_GameActions_EndFinishingTouchesAction.htm">EndFinishingTouchesAction</a></td><td>
            Represents the action of ending a player's turn during <a href="T_ProjectLCore_GameLogic_GamePhase.htm">FinishingTouches</a></td></tr><tr><td><a href="T_ProjectLCore_GameActions_GameAction.htm">GameAction</a></td><td>
            Represents an action that a player can take during their turn. Together with <a href="T_ProjectLCore_GameActions_IActionProcessor.htm">IActionProcessor</a> and <a href="T_ProjectLCore_GameActions_IAsyncActionProcessor.htm">IAsyncActionProcessor</a> it implements the visitor pattern.
            The validity of every action should be checked by an <a href="T_ProjectLCore_GameActions_Verification_ActionVerifier.htm">ActionVerifier</a> before being processed.
            </td></tr><tr><td><a href="T_ProjectLCore_GameActions_GameActionProcessor.htm">GameActionProcessor</a></td><td>
            Processes actions of one player in the game.
            The class is responsible for updating the game state based on the player's actions.
            It isn't responsible for verifying the actions. The actions should be verified by an <a href="T_ProjectLCore_GameActions_Verification_ActionVerifier.htm">ActionVerifier</a> before being processed.
            </td></tr><tr><td><a href="T_ProjectLCore_GameActions_ChangeTetrominoAction.htm">ChangeTetrominoAction</a></td><td>
            Represents the action of changing a tetromino for a different one.
            </td></tr><tr><td><a href="T_ProjectLCore_GameActions_MasterAction.htm">MasterAction</a></td><td>
            Represents the use of the Master Action.
            </td></tr><tr><td><a href="T_ProjectLCore_GameActions_PlaceTetrominoAction.htm">PlaceTetrominoAction</a></td><td>
            Represents the action of placing a tetromino on a puzzle.
            </td></tr><tr><td><a href="T_ProjectLCore_GameActions_RecycleAction.htm">RecycleAction</a></td><td>
            Represents the action of recycling puzzles.
            The player chooses a row to recycle. The puzzles from the row will be put to the bottom of the deck in the order specified by the player. The puzzle row is then refilled.
            </td></tr><tr><td><a href="T_ProjectLCore_GameActions_TakeBasicTetrominoAction.htm">TakeBasicTetrominoAction</a></td><td>
            Represents the action of taking a <a href="T_ProjectLCore_GamePieces_TetrominoShape.htm">O1</a> tetromino from the shared reserve.
            </td></tr><tr><td><a href="T_ProjectLCore_GameActions_TakePuzzleAction.htm">TakePuzzleAction</a></td><td>
            Represents the action of taking a puzzle.
            Players can take puzzles from the top of the white deck, top of the black deck or a specific puzzle in one of the rows.
            </td></tr><tr><td><a href="T_ProjectLCore_GameActions_TetrominoAction.htm">TetrominoAction</a></td><td>
            The base class for <a href="T_ProjectLCore_GameActions_TakeBasicTetrominoAction.htm">TakeBasicTetrominoAction</a> and <a href="T_ProjectLCore_GameActions_ChangeTetrominoAction.htm">ChangeTetrominoAction</a> because they are technically the same action, just with different parameters.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Interfaces</h2><div id="IDACASection"><table id="interfaceList" class="table is-hoverable"><tr><td><a href="T_ProjectLCore_GameActions_IActionProcessor.htm">IActionProcessor</a></td><td>
            Defines an interface for processing game actions.
            </td></tr><tr><td><a href="T_ProjectLCore_GameActions_IAsyncActionProcessor.htm">IAsyncActionProcessor</a></td><td>
            Defines an interface for asynchronously processing game actions.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Enumerations</h2><div id="IDICASection"><table id="enumerationList" class="table is-hoverable"><tr><td><a href="T_ProjectLCore_GameActions_RecycleAction_Options.htm">RecycleAction<span id="LSTBB454BF0_0" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Options</a></td><td>
            Player can choose to recycle the white or the black row.
            </td></tr><tr><td><a href="T_ProjectLCore_GameActions_TakePuzzleAction_Options.htm">TakePuzzleAction<span id="LSTBB454BF0_1" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Options</a></td><td>
            Possible options for taking a puzzle.
            </td></tr></table></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Classes</a></li><li><a class="quickLink">Interfaces</a></li><li><a class="quickLink">Enumerations</a></li></ul></nav></div></div></div></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
});</script></body></html>