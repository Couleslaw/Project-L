<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>GameState Methods</title><meta name="Title" content="Methods" /><meta name="Help.Id" content="Methods.T:ProjectLCore.GameLogic.GameState" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="ProjectLCore.GameLogic" /><meta name="guid" content="Methods_T_ProjectLCore_GameLogic_GameState" /><meta name="tocFile" content="../toc/IDCCA.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">Project L Core Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Game<wbr />State Methods</h1><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDBDASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="M_ProjectLCore_GameLogic_GameState_AddListener.htm">AddListener(IGameStatePuzzleAsyncListener)</a></td><td>
            Subscribes the given tetromino listener to the events of this <a href="T_ProjectLCore_GameLogic_GameState.htm">GameState</a>.
            </td></tr><tr><td><a href="M_ProjectLCore_GameLogic_GameState_AddListener_1.htm">AddListener(IGameStatePuzzleListener)</a></td><td>
            Subscribes the given puzzle listener to the events of this <a href="T_ProjectLCore_GameLogic_GameState.htm">GameState</a>.
            </td></tr><tr><td><a href="M_ProjectLCore_GameLogic_GameState_AddListener_2.htm">AddListener(ITetrominoCollectionListener)</a></td><td>
            Subscribes the given tetromino listener to the events of this <a href="T_ProjectLCore_GameLogic_GameState.htm">GameState</a>.
            </td></tr><tr><td><a href="M_ProjectLCore_GameLogic_GameState_AddTetromino.htm">AddTetromino</a></td><td>
            Adds the tetromino of the given shape to the shared reserve.
            </td></tr><tr><td><a href="M_ProjectLCore_GameLogic_GameState_CreateFromFile__1.htm">CreateFromFile<span id="LST81B10BBE_0" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST81B10BBE_1" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Initializes a new instance of the <a href="T_ProjectLCore_GameLogic_GameState.htm">GameState</a> class from a file containing puzzles.
            </td></tr><tr><td><a href="M_ProjectLCore_GameLogic_GameState_CreateFromStream__1.htm">CreateFromStream<span id="LST81B10BBE_2" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST81B10BBE_3" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Initializes a new instance of the <a href="T_ProjectLCore_GameLogic_GameState.htm">GameState</a> class from a stream containing puzzles.
            </td></tr><tr><td><a href="M_ProjectLCore_GameLogic_GameState_GetAllPuzzlesInGame.htm">GetAllPuzzlesInGame</a></td><td>
            Creates a copy of all the puzzles in the game. This includes puzzles which have already been finished.
            The puzzles are cloned to prevent modification of the original data.
            </td></tr><tr><td><a href="M_ProjectLCore_GameLogic_GameState_GetAvailableBlackPuzzles.htm">GetAvailableBlackPuzzles</a></td><td> Creates a list containing the puzzles in the black row. </td></tr><tr><td><a href="M_ProjectLCore_GameLogic_GameState_GetAvailableWhitePuzzles.htm">GetAvailableWhitePuzzles</a></td><td> Creates a list containing the puzzles in the white row. </td></tr><tr><td><a href="M_ProjectLCore_GameLogic_GameState_GetGameInfo.htm">GetGameInfo</a></td><td>
            Creates a copy of information about the game wrapped in a <a href="T_ProjectLCore_GameLogic_GameState_GameInfo.htm">GameState<span id="LST81B10BBE_4" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>GameInfo</a> object. It prevents modification of the original data.
            </td></tr><tr><td><a href="M_ProjectLCore_GameLogic_GameState_GetNumTetrominosLeft.htm">GetNumTetrominosLeft</a></td><td>
            Gets the number of tetrominos of each type left in the shared reserve.
            </td></tr><tr><td><a href="M_ProjectLCore_GameLogic_GameState_GetPuzzleWithId.htm">GetPuzzleWithId</a></td><td>
            Finds the puzzle matching the given identifier in one of the rows.
            </td></tr><tr><td><a href="M_ProjectLCore_GameLogic_GameState_PutPuzzleToTheBottomOfDeck.htm">PutPuzzleToTheBottomOfDeck</a></td><td>
            Puts the puzzle to the bottom of the deck it belongs to.
            </td></tr><tr><td><a href="M_ProjectLCore_GameLogic_GameState_RefillPuzzles.htm">RefillPuzzles</a></td><td>
            Refills the blank spots in the puzzle rows with puzzles from the decks.
            </td></tr><tr><td><a href="M_ProjectLCore_GameLogic_GameState_RefillPuzzlesAsync.htm">RefillPuzzlesAsync</a></td><td>
            Refills the blank spots in the puzzle rows with puzzles from the decks.
            Before a puzzle is refilled, the <a href="M_ProjectLCore_GameLogic_IGameStatePuzzleAsyncListener_OnPuzzleRefilledAsync.htm">OnPuzzleRefilledAsync(Int32, CancellationToken)</a>
            method of all subscribed listeners is called and awaited.
            </td></tr><tr><td><a href="M_ProjectLCore_GameLogic_GameState_RemoveListener.htm">RemoveListener(IGameStatePuzzleAsyncListener)</a></td><td>
            Unsubscribes the tetromino listener from the events of this <a href="T_ProjectLCore_GameLogic_GameState.htm">GameState</a>.
            </td></tr><tr><td><a href="M_ProjectLCore_GameLogic_GameState_RemoveListener_1.htm">RemoveListener(IGameStatePuzzleListener)</a></td><td>
            Unsubscribes the puzzle listener from the events of this <a href="T_ProjectLCore_GameLogic_GameState.htm">GameState</a>.
            </td></tr><tr><td><a href="M_ProjectLCore_GameLogic_GameState_RemoveListener_2.htm">RemoveListener(ITetrominoCollectionListener)</a></td><td>
            Unsubscribes the tetromino listener from the events of this <a href="T_ProjectLCore_GameLogic_GameState.htm">GameState</a>.
            </td></tr><tr><td><a href="M_ProjectLCore_GameLogic_GameState_RemovePuzzleWithId.htm">RemovePuzzleWithId</a></td><td>
            Removes the puzzle matching the given identifier from one of the rows, if it is present.
            </td></tr><tr><td><a href="M_ProjectLCore_GameLogic_GameState_RemoveTetromino.htm">RemoveTetromino</a></td><td>
            Removes the tetromino of the given shape from the shared reserve.
            </td></tr><tr><td><a href="M_ProjectLCore_GameLogic_GameState_TakeTopBlackPuzzle.htm">TakeTopBlackPuzzle</a></td><td>
            Removes 1 puzzle from the top of the black deck and returns it.
            </td></tr><tr><td><a href="M_ProjectLCore_GameLogic_GameState_TakeTopWhitePuzzle.htm">TakeTopWhitePuzzle</a></td><td>
            Removes 1 puzzle from the top of the white deck and returns it.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="T_ProjectLCore_GameLogic_GameState.htm">GameState Class</a></div><div><a href="N_ProjectLCore_GameLogic.htm">ProjectLCore.GameLogic Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Methods</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
});</script></body></html>