{
  "api/EasyUI.LogPosition.html": {
    "href": "api/EasyUI.LogPosition.html",
    "title": "Enum LogPosition | Project L Unity",
    "summary": "Enum LogPosition Namespace EasyUI Assembly Assembly-CSharp.dll public enum LogPosition Fields Bottom = 1 Top = 0"
  },
  "api/EasyUI.Logger.html": {
    "href": "api/EasyUI.Logger.html",
    "title": "Class Logger | Project L Unity",
    "summary": "Class Logger Namespace EasyUI Assembly Assembly-CSharp.dll public class Logger : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour Logger Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties IsOpen public bool IsOpen { get; } Property Value bool Methods ClearLog() public void ClearLog() Hide() public void Hide() Show() public void Show() ToggleLogUI() public void ToggleLogUI()"
  },
  "api/EasyUI.html": {
    "href": "api/EasyUI.html",
    "title": "Namespace EasyUI | Project L Unity",
    "summary": "Namespace EasyUI Classes Logger Enums LogPosition"
  },
  "api/ProjectL.Animation.AnimationManager.html": {
    "href": "api/ProjectL.Animation.AnimationManager.html",
    "title": "Class AnimationManager | Project L Unity",
    "summary": "Class AnimationManager Namespace ProjectL.Animation Assembly Assembly-CSharp.dll public static class AnimationManager Inheritance object AnimationManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods PlayTapSoundAndWaitForScaledDelay(float, CancellationToken) public static Task PlayTapSoundAndWaitForScaledDelay(float animationDelayFraction, CancellationToken cancellationToken) Parameters animationDelayFraction float cancellationToken CancellationToken Returns Task WaitForScaledDelay(float, CancellationToken) public static Task WaitForScaledDelay(float animationDelayFraction, CancellationToken cancellationToken) Parameters animationDelayFraction float cancellationToken CancellationToken Returns Task WaitForScaledDelayAndPlayTapSound(float, CancellationToken) public static Task WaitForScaledDelayAndPlayTapSound(float animationDelayFraction, CancellationToken cancellationToken) Parameters animationDelayFraction float cancellationToken CancellationToken Returns Task"
  },
  "api/ProjectL.Animation.ColorManager.html": {
    "href": "api/ProjectL.Animation.ColorManager.html",
    "title": "Class ColorManager | Project L Unity",
    "summary": "Class ColorManager Namespace ProjectL.Animation Assembly Assembly-CSharp.dll public static class ColorManager Inheritance object ColorManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields gray public static readonly Color gray Field Value Color green public static readonly Color green Field Value Color orange public static readonly Color orange Field Value Color red public static readonly Color red Field Value Color"
  },
  "api/ProjectL.Animation.html": {
    "href": "api/ProjectL.Animation.html",
    "title": "Namespace ProjectL.Animation | Project L Unity",
    "summary": "Namespace ProjectL.Animation Classes AnimationManager ColorManager"
  },
  "api/ProjectL.Data.AIPlayerTypesLoader.html": {
    "href": "api/ProjectL.Data.AIPlayerTypesLoader.html",
    "title": "Class AIPlayerTypesLoader | Project L Unity",
    "summary": "Class AIPlayerTypesLoader Namespace ProjectL.Data Assembly Assembly-CSharp.dll Provides functionality to load player types from an INI file. public static class AIPlayerTypesLoader Inheritance object AIPlayerTypesLoader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AvailableAIPlayerTypes Gets a read-only list of available AI player information. This value is initialized only once when the class is loaded. public static IReadOnlyList<PlayerTypeInfo> AvailableAIPlayerTypes { get; } Property Value IReadOnlyList<PlayerTypeInfo>"
  },
  "api/ProjectL.Data.AnimationSpeed.html": {
    "href": "api/ProjectL.Data.AnimationSpeed.html",
    "title": "Class AnimationSpeed | Project L Unity",
    "summary": "Class AnimationSpeed Namespace ProjectL.Data Assembly Assembly-CSharp.dll public static class AnimationSpeed Inheritance object AnimationSpeed Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AnimationSpeedPlayerPrefKey The name of the UnityEngine.PlayerPrefs key for animation speed. public const string AnimationSpeedPlayerPrefKey = \"AnimationSpeed\" Field Value string Properties DelayMultiplier public static float DelayMultiplier { get; } Property Value float Multiplier public static float Multiplier { get; } Property Value float"
  },
  "api/ProjectL.Data.GameSettings.html": {
    "href": "api/ProjectL.Data.GameSettings.html",
    "title": "Class GameSettings | Project L Unity",
    "summary": "Class GameSettings Namespace ProjectL.Data Assembly Assembly-CSharp.dll Provides parameters and settings for starting a game. public static class GameSettings Inheritance object GameSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties NumBlackPuzzles public static int NumBlackPuzzles { get; } Property Value int NumInitialTetrominos The number of initial Tetrominos. Defaults to ProjectL.Data.GameSettings._defaultNumInitialTetrominos. public static int NumInitialTetrominos { get; set; } Property Value int Players Dictionary of player names and their associated player type information. Note that this implies that all player names must be unique. public static Dictionary<string, PlayerTypeInfo> Players { get; set; } Property Value Dictionary<string, PlayerTypeInfo> ShouldShufflePlayers Indicates whether players should be shuffled. Defaults to ProjectL.Data.GameSettings._defaultShouldShufflePlayers. public static bool ShouldShufflePlayers { get; set; } Property Value bool"
  },
  "api/ProjectL.Data.GameSummary.Stats.html": {
    "href": "api/ProjectL.Data.GameSummary.Stats.html",
    "title": "Class GameSummary.Stats | Project L Unity",
    "summary": "Class GameSummary.Stats Namespace ProjectL.Data Assembly Assembly-CSharp.dll Represents information needed to calculate the final score for a player. public class GameSummary.Stats Inheritance object GameSummary.Stats Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FinishedPuzzles A list of puzzles that the player has finished. public List<Puzzle> FinishedPuzzles Field Value List<Puzzle> FinishingTouchesTetrominos A list of tetromino shapes that the player placed during finishing touches. public List<TetrominoShape> FinishingTouchesTetrominos Field Value List<TetrominoShape> NumLeftoverTetrominos The number of leftover tetrominos that the player has at the end of the game. public int NumLeftoverTetrominos Field Value int UnfinishedPuzzles A list of puzzles that the player has started but did not finished. public List<Puzzle> UnfinishedPuzzles Field Value List<Puzzle>"
  },
  "api/ProjectL.Data.GameSummary.html": {
    "href": "api/ProjectL.Data.GameSummary.html",
    "title": "Class GameSummary | Project L Unity",
    "summary": "Class GameSummary Namespace ProjectL.Data Assembly Assembly-CSharp.dll Provides functionality to track information about players needed to calculate the final score. public static class GameSummary Inheritance object GameSummary Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties FinalResults Stores the final order of the players. public static Dictionary<Player, int> FinalResults { get; set; } Property Value Dictionary<Player, int> PlayerStats Stores GameSummary.Stats information about each player. public static Dictionary<Player, GameSummary.Stats> PlayerStats { get; } Property Value Dictionary<Player, GameSummary.Stats> Methods AddFinishedPuzzle(Player, Puzzle) Adds a finished puzzle to the specified player's info. public static void AddFinishedPuzzle(Player player, Puzzle puzzle) Parameters player Player The player who finished the puzzle. puzzle Puzzle The puzzle that was finished. AddFinishingTouchesTetromino(Player, TetrominoShape) Adds a finishing touches tetromino to the specified player's info. public static void AddFinishingTouchesTetromino(Player player, TetrominoShape tetromino) Parameters player Player The player who placed the tetromino. tetromino TetrominoShape The tetromino shape. AddUnfinishedPuzzle(Player, Puzzle) Adds an unfinished puzzle to the specified player's info. public static void AddUnfinishedPuzzle(Player player, Puzzle puzzle) Parameters player Player The player who did not finish the puzzle. puzzle Puzzle The puzzle that was not finished. Clear() Clears all stored information. public static void Clear() SetNumLeftoverTetrominos(Player, int) Sets the number of leftover tetrominos for the specified player. public static void SetNumLeftoverTetrominos(Player player, int numLeftoverTetrominos) Parameters player Player The player. numLeftoverTetrominos int The number of leftover tetrominos."
  },
  "api/ProjectL.Data.PlayerTypeInfo.html": {
    "href": "api/ProjectL.Data.PlayerTypeInfo.html",
    "title": "Struct PlayerTypeInfo | Project L Unity",
    "summary": "Struct PlayerTypeInfo Namespace ProjectL.Data Assembly Assembly-CSharp.dll Represents information about a loaded player type. public readonly struct PlayerTypeInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors PlayerTypeInfo(Type, string, string?) Initializes a new instance of the PlayerTypeInfo struct. public PlayerTypeInfo(Type type, string name, string? initPath) Parameters type Type The type of the player (Human or some kind of AI). name string The display name of the player type. initPath string The initialization path for the player, if any. Properties DisplayName The display name of the player type. public string DisplayName { get; } Property Value string InitPath The initialization path for the player, if any. public string? InitPath { get; } Property Value string PlayerType The type of the player. public Type PlayerType { get; } Property Value Type"
  },
  "api/ProjectL.Data.PuzzleSpriteType.html": {
    "href": "api/ProjectL.Data.PuzzleSpriteType.html",
    "title": "Enum PuzzleSpriteType | Project L Unity",
    "summary": "Enum PuzzleSpriteType Namespace ProjectL.Data Assembly Assembly-CSharp.dll public enum PuzzleSpriteType Fields BorderBright = 1 BorderDim = 0 Borderless = 2 Highlighted = 3"
  },
  "api/ProjectL.Data.ResourcesLoader.html": {
    "href": "api/ProjectL.Data.ResourcesLoader.html",
    "title": "Class ResourcesLoader | Project L Unity",
    "summary": "Class ResourcesLoader Namespace ProjectL.Data Assembly Assembly-CSharp.dll public static class ResourcesLoader Inheritance object ResourcesLoader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods TryGetPuzzleSprite(Puzzle, PuzzleSpriteType, out Sprite?) Retrieves the puzzle sprite based on the specified puzzle and sprite type. public static bool TryGetPuzzleSprite(Puzzle puzzle, PuzzleSpriteType type, out Sprite? result) Parameters puzzle Puzzle The ProjectLCore.GamePieces.Puzzle object containing the puzzle number and color information. type PuzzleSpriteType The type of sprite to load. result Sprite When this methods succeeds, contains the loaded sprite; or null on failure. Returns bool true if the sprite was found; otherwise, false. TryGetTetrominoSprite(TetrominoShape, out Sprite?) Retrieves the tetromino sprite for the given shape. public static bool TryGetTetrominoSprite(TetrominoShape shape, out Sprite? result) Parameters shape TetrominoShape The shape of the tetromino. result Sprite When this methods succeeds, contains the loaded sprite; or null on failure. Returns bool true if the sprite was found; otherwise, false. TryReadPuzzleFile(out string) Reads the contents of the puzzle configuration file. public static bool TryReadPuzzleFile(out string result) Parameters result string When this methods succeeds, contains the read text; or Empty on failure. Returns bool true if the file was found; otherwise, false."
  },
  "api/ProjectL.Data.RuntimeGameInfo.Info.html": {
    "href": "api/ProjectL.Data.RuntimeGameInfo.Info.html",
    "title": "Struct RuntimeGameInfo.Info | Project L Unity",
    "summary": "Struct RuntimeGameInfo.Info Namespace ProjectL.Data Assembly Assembly-CSharp.dll Represents information about the current game state. public struct RuntimeGameInfo.Info Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties CurrentTurnInfo The current phase of the game. public TurnInfo CurrentTurnInfo { readonly get; set; } Property Value TurnInfo PlayerName The name of the current player. public string PlayerName { readonly get; set; } Property Value string PlayerScores Dictionary where the key is the player's name and the value is their score. public Dictionary<string, int> PlayerScores { readonly get; set; } Property Value Dictionary<string, int>"
  },
  "api/ProjectL.Data.RuntimeGameInfo.html": {
    "href": "api/ProjectL.Data.RuntimeGameInfo.html",
    "title": "Class RuntimeGameInfo | Project L Unity",
    "summary": "Class RuntimeGameInfo Namespace ProjectL.Data Assembly Assembly-CSharp.dll public static class RuntimeGameInfo Inheritance object RuntimeGameInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsGameInProgress public static bool IsGameInProgress { get; } Property Value bool Methods RegisterGame(GameCore) Registers the game instance as the current game. public static void RegisterGame(GameCore game) Parameters game GameCore The game. TryGetCurrentInfo(out Info) Retrieves information about the current game state. public static bool TryGetCurrentInfo(out RuntimeGameInfo.Info result) Parameters result RuntimeGameInfo.Info When this methods succeeds, contains a RuntimeGameInfo.Info instance representing the current game state; or unspecified value on failure. Returns bool true if a ProjectLCore.GameLogic.GameCore instance is registered; otherwise, false. UnregisterGame() Unregisters the current game instance. public static void UnregisterGame()"
  },
  "api/ProjectL.Data.html": {
    "href": "api/ProjectL.Data.html",
    "title": "Namespace ProjectL.Data | Project L Unity",
    "summary": "Namespace ProjectL.Data Classes AIPlayerTypesLoader Provides functionality to load player types from an INI file. AnimationSpeed GameSettings Provides parameters and settings for starting a game. GameSummary Provides functionality to track information about players needed to calculate the final score. GameSummary.Stats Represents information needed to calculate the final score for a player. ResourcesLoader RuntimeGameInfo Structs PlayerTypeInfo Represents information about a loaded player type. RuntimeGameInfo.Info Represents information about the current game state. Enums PuzzleSpriteType"
  },
  "api/ProjectL.FinalResultsScene.FinalAnimationManager.html": {
    "href": "api/ProjectL.FinalResultsScene.FinalAnimationManager.html",
    "title": "Class FinalAnimationManager | Project L Unity",
    "summary": "Class FinalAnimationManager Namespace ProjectL.FinalResultsScene Assembly Assembly-CSharp.dll Manages the animation of the final results screen. public class FinalAnimationManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour FinalAnimationManager Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) See Also MonoBehaviour"
  },
  "api/ProjectL.FinalResultsScene.FinalResultsTableRow.html": {
    "href": "api/ProjectL.FinalResultsScene.FinalResultsTableRow.html",
    "title": "Class FinalResultsTableRow | Project L Unity",
    "summary": "Class FinalResultsTableRow Namespace ProjectL.FinalResultsScene Assembly Assembly-CSharp.dll Manages the FinalResultsTableRow prefab. Represents a row in the final results table, displaying the player's name and rank. public class FinalResultsTableRow : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour FinalResultsTableRow Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods Hide() Hides the row by setting the text color to clear. public void Hide() Init(string, int) Initializes the row with the player's name and rank (order in results table). public void Init(string playerName, int rank) Parameters playerName string Name of the player. rank int The rank of the player. Show() Shows the row by setting the text color to white. public void Show() See Also MonoBehaviour"
  },
  "api/ProjectL.FinalResultsScene.PlayerStatsColumn.html": {
    "href": "api/ProjectL.FinalResultsScene.PlayerStatsColumn.html",
    "title": "Class PlayerStatsColumn | Project L Unity",
    "summary": "Class PlayerStatsColumn Namespace ProjectL.FinalResultsScene Assembly Assembly-CSharp.dll Manages the PlayerStatsColumn prefab. Represents a column in the final results screen that contains information about how the player performed in the game and can animate it. [RequireComponent(typeof(CanvasGroup))] public class PlayerStatsColumn : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour PlayerStatsColumn Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Score The score of the player evaluated so far. public int Score { get; } Property Value int Methods AnimateCompletedAsync(CancellationToken) Animates player's completed puzzles. public Task AnimateCompletedAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Returns Task A task that represents the asynchronous operation. Exceptions OperationCanceledException The task was canceled. AnimateFinishingTouchesAsync(CancellationToken) Animates the player's finishing touches tetrominos. public Task AnimateFinishingTouchesAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Returns Task A task that represents the asynchronous operation. Exceptions OperationCanceledException The task was canceled. AnimateIncompleteAsync(CancellationToken) Animates the player's incomplete puzzles. public Task AnimateIncompleteAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Returns Task A task that represents the asynchronous operation. Exceptions OperationCanceledException The task was canceled. AnimateStartAsync(CancellationToken) Shows the player's name and score. public Task AnimateStartAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Returns Task A task that represents the asynchronous operation. Exceptions OperationCanceledException The task was canceled. Setup(string, Stats) Prepares this instance to animate information about the specified player's end game statistics. public void Setup(string playerName, GameSummary.Stats gameEndInfo) Parameters playerName string gameEndInfo GameSummary.Stats The game end information about the player. See Also MonoBehaviour"
  },
  "api/ProjectL.FinalResultsScene.ScoreDetailsColumn.html": {
    "href": "api/ProjectL.FinalResultsScene.ScoreDetailsColumn.html",
    "title": "Class ScoreDetailsColumn | Project L Unity",
    "summary": "Class ScoreDetailsColumn Namespace ProjectL.FinalResultsScene Assembly Assembly-CSharp.dll Manages the ScoreDetailsColumn prefab. Represents a column in the final results screen that contains their number of completed puzzles and number of leftover tetrominos. public class ScoreDetailsColumn : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ScoreDetailsColumn Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods AnimateAsync(CancellationToken) Animates the score details column by showing the number of completed puzzles and leftover tetrominos. public Task AnimateAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Returns Task A task that represents the asynchronous operation. Exceptions OperationCanceledException The task was canceled. Setup(Stats) Prepares this instance to animate information about score details. public void Setup(GameSummary.Stats gameEndInfo) Parameters gameEndInfo GameSummary.Stats The game end information about the player. See Also MonoBehaviour"
  },
  "api/ProjectL.FinalResultsScene.html": {
    "href": "api/ProjectL.FinalResultsScene.html",
    "title": "Namespace ProjectL.FinalResultsScene | Project L Unity",
    "summary": "Namespace ProjectL.FinalResultsScene Classes FinalAnimationManager Manages the animation of the final results screen. FinalResultsTableRow Manages the FinalResultsTableRow prefab. Represents a row in the final results table, displaying the player's name and rank. PlayerStatsColumn Manages the PlayerStatsColumn prefab. Represents a column in the final results screen that contains information about how the player performed in the game and can animate it. ScoreDetailsColumn Manages the ScoreDetailsColumn prefab. Represents a column in the final results screen that contains their number of completed puzzles and number of leftover tetrominos."
  },
  "api/ProjectL.GameScene.ActionHandling.ActionConstructor-1.html": {
    "href": "api/ProjectL.GameScene.ActionHandling.ActionConstructor-1.html",
    "title": "Class ActionConstructor<T> | Project L Unity",
    "summary": "Class ActionConstructor<T> Namespace ProjectL.GameScene.ActionHandling Assembly Assembly-CSharp.dll public abstract class ActionConstructor<T> : IActionConstructor where T : GameAction Type Parameters T Inheritance object ActionConstructor<T> Implements IActionConstructor Derived ChangeTetrominoActionConstructor PlaceTetrominoActionConstructor RecycleActionConstructor SelectRewardActionConstructor TakeBasicActionConstructor TakePuzzleActionConstructor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ApplyActionModification(IActionModification<T>) protected abstract void ApplyActionModification(IActionModification<T> change) Parameters change IActionModification<T> ApplyActionModification<T1>(IActionModification<T1>) public void ApplyActionModification<T1>(IActionModification<T1> change) where T1 : GameAction Parameters change IActionModification<T1> Type Parameters T1 GetAction() protected abstract T? GetAction() Returns T GetAction<T1>() public T1? GetAction<T1>() where T1 : GameAction Returns T1 Type Parameters T1 Reset() public abstract void Reset()"
  },
  "api/ProjectL.GameScene.ActionHandling.ActionMode.html": {
    "href": "api/ProjectL.GameScene.ActionHandling.ActionMode.html",
    "title": "Enum ActionMode | Project L Unity",
    "summary": "Enum ActionMode Namespace ProjectL.GameScene.ActionHandling Assembly Assembly-CSharp.dll public enum ActionMode Fields ActionCreation = 0 FinishingTouches = 1 RewardSelection = 2"
  },
  "api/ProjectL.GameScene.ActionHandling.ChangeTetrominoActionConstructor.html": {
    "href": "api/ProjectL.GameScene.ActionHandling.ChangeTetrominoActionConstructor.html",
    "title": "Class ChangeTetrominoActionConstructor | Project L Unity",
    "summary": "Class ChangeTetrominoActionConstructor Namespace ProjectL.GameScene.ActionHandling Assembly Assembly-CSharp.dll public class ChangeTetrominoActionConstructor : ActionConstructor<ChangeTetrominoAction>, IActionConstructor Inheritance object ActionConstructor<ChangeTetrominoAction> ChangeTetrominoActionConstructor Implements IActionConstructor Inherited Members ActionConstructor<ChangeTetrominoAction>.GetAction<T1>() ActionConstructor<ChangeTetrominoAction>.ApplyActionModification<T1>(IActionModification<T1>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ApplyActionModification(IActionModification<ChangeTetrominoAction>) protected override void ApplyActionModification(IActionModification<ChangeTetrominoAction> change) Parameters change IActionModification<ChangeTetrominoAction> GetAction() protected override ChangeTetrominoAction? GetAction() Returns ChangeTetrominoAction Reset() public override void Reset()"
  },
  "api/ProjectL.GameScene.ActionHandling.ChangeTetrominoActionModification.html": {
    "href": "api/ProjectL.GameScene.ActionHandling.ChangeTetrominoActionModification.html",
    "title": "Class ChangeTetrominoActionModification | Project L Unity",
    "summary": "Class ChangeTetrominoActionModification Namespace ProjectL.GameScene.ActionHandling Assembly Assembly-CSharp.dll public class ChangeTetrominoActionModification : IActionModification<ChangeTetrominoAction> Inheritance object ChangeTetrominoActionModification Implements IActionModification<ChangeTetrominoAction> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ChangeTetrominoActionModification(TetrominoShape?, TetrominoShape?) public ChangeTetrominoActionModification(TetrominoShape? oldTetromino, TetrominoShape? newTetromino) Parameters oldTetromino TetrominoShape? newTetromino TetrominoShape? Properties NewTetromino public TetrominoShape? NewTetromino { get; } Property Value TetrominoShape? OldTetromino public TetrominoShape? OldTetromino { get; } Property Value TetrominoShape?"
  },
  "api/ProjectL.GameScene.ActionHandling.ChangeTetrominoConstructor.html": {
    "href": "api/ProjectL.GameScene.ActionHandling.ChangeTetrominoConstructor.html",
    "title": "Class ChangeTetrominoConstructor | Project L Unity",
    "summary": "Class ChangeTetrominoConstructor Namespace ProjectL.GameScene.ActionHandling Assembly Assembly-CSharp.dll public class ChangeTetrominoConstructor : ActionConstructor<ChangeTetrominoAction>, IActionConstructor Inheritance object ActionConstructor<ChangeTetrominoAction> ChangeTetrominoConstructor Implements IActionConstructor Inherited Members ActionConstructor<ChangeTetrominoAction>.GetAction<T1>() ActionConstructor<ChangeTetrominoAction>.ApplyActionModification<T1>(IActionModification<T1>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ApplyActionModification(IActionModification<ChangeTetrominoAction>) protected override void ApplyActionModification(IActionModification<ChangeTetrominoAction> change) Parameters change IActionModification<ChangeTetrominoAction> GetAction() protected override ChangeTetrominoAction? GetAction() Returns ChangeTetrominoAction Reset() public override void Reset()"
  },
  "api/ProjectL.GameScene.ActionHandling.HumanPlayerActionCreationManager.html": {
    "href": "api/ProjectL.GameScene.ActionHandling.HumanPlayerActionCreationManager.html",
    "title": "Class HumanPlayerActionCreationManager | Project L Unity",
    "summary": "Class HumanPlayerActionCreationManager Namespace ProjectL.GameScene.ActionHandling Assembly Assembly-CSharp.dll public class HumanPlayerActionCreationManager : GraphicsManager<HumanPlayerActionCreationManager>, GameGraphicsSystem.IGraphicsManager, ICurrentTurnListener, IPlayerStatePuzzleFinishedAsyncListener Inheritance object Object Component Behaviour MonoBehaviour StaticInstance<HumanPlayerActionCreationManager> GraphicsManager<HumanPlayerActionCreationManager> HumanPlayerActionCreationManager Implements GameGraphicsSystem.IGraphicsManager ICurrentTurnListener IPlayerStatePuzzleFinishedAsyncListener Inherited Members GraphicsManager<HumanPlayerActionCreationManager>.Start() StaticInstance<HumanPlayerActionCreationManager>.Instance MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties CurrentRewardEventArgs public HumanPlayer.GetRewardEventArgs? CurrentRewardEventArgs { get; } Property Value HumanPlayer.GetRewardEventArgs Methods AddListener<T>(IHumanPlayerActionCreator<T>) public void AddListener<T>(IHumanPlayerActionCreator<T> listener) where T : GameAction Parameters listener IHumanPlayerActionCreator<T> Type Parameters T Awake() Called when the script instance is being loaded. Ensures that the instance is assigned to the current object. protected override void Awake() Init(GameCore) public override void Init(GameCore game) Parameters game GameCore OnActionCanceled() public void OnActionCanceled() OnActionConfirmed() public void OnActionConfirmed() OnChangeTetrominoActionRequested() public void OnChangeTetrominoActionRequested() OnClearBoardRequested() public void OnClearBoardRequested() OnDestroy() Called when the MonoBehaviour will be destroyed. Resets the static instance if it matches the current object. protected override void OnDestroy() OnEndFinishingTouchesActionRequested() public void OnEndFinishingTouchesActionRequested() OnMasterActionRequested() public void OnMasterActionRequested() OnPlacePieceActionRequested() public void OnPlacePieceActionRequested() OnRecycleActionRequested() public void OnRecycleActionRequested() OnRewardSelected() public void OnRewardSelected() OnTakeBasicTetrominoActionRequested() public void OnTakeBasicTetrominoActionRequested() OnTakePuzzleActionRequested() public void OnTakePuzzleActionRequested() RegisterController(IActionCreationController) public static void RegisterController(IActionCreationController controller) Parameters controller IActionCreationController RegisterPlayer(HumanPlayer, PlayerState) public void RegisterPlayer(HumanPlayer player, PlayerState playerState) Parameters player HumanPlayer playerState PlayerState RemoveListener<T>(IHumanPlayerActionCreator<T>) public void RemoveListener<T>(IHumanPlayerActionCreator<T> listener) where T : GameAction Parameters listener IHumanPlayerActionCreator<T> Type Parameters T"
  },
  "api/ProjectL.GameScene.ActionHandling.IAIPlayerActionAnimator-1.html": {
    "href": "api/ProjectL.GameScene.ActionHandling.IAIPlayerActionAnimator-1.html",
    "title": "Interface IAIPlayerActionAnimator<T> | Project L Unity",
    "summary": "Interface IAIPlayerActionAnimator<T> Namespace ProjectL.GameScene.ActionHandling Assembly Assembly-CSharp.dll public interface IAIPlayerActionAnimator<T> where T : GameAction Type Parameters T Methods AnimateAsync(T, CancellationToken) Task AnimateAsync(T action, CancellationToken cancellationToken) Parameters action T cancellationToken CancellationToken Returns Task"
  },
  "api/ProjectL.GameScene.ActionHandling.IActionConstructor.html": {
    "href": "api/ProjectL.GameScene.ActionHandling.IActionConstructor.html",
    "title": "Interface IActionConstructor | Project L Unity",
    "summary": "Interface IActionConstructor Namespace ProjectL.GameScene.ActionHandling Assembly Assembly-CSharp.dll public interface IActionConstructor Methods ApplyActionModification<T>(IActionModification<T>) void ApplyActionModification<T>(IActionModification<T> change) where T : GameAction Parameters change IActionModification<T> Type Parameters T GetAction<T>() T? GetAction<T>() where T : GameAction Returns T Type Parameters T Reset() void Reset()"
  },
  "api/ProjectL.GameScene.ActionHandling.IActionCreationController.html": {
    "href": "api/ProjectL.GameScene.ActionHandling.IActionCreationController.html",
    "title": "Interface IActionCreationController | Project L Unity",
    "summary": "Interface IActionCreationController Namespace ProjectL.GameScene.ActionHandling Assembly Assembly-CSharp.dll public interface IActionCreationController Methods SetActionMode(ActionMode) void SetActionMode(ActionMode mode) Parameters mode ActionMode SetPlayerMode(PlayerMode) void SetPlayerMode(PlayerMode mode) Parameters mode PlayerMode"
  },
  "api/ProjectL.GameScene.ActionHandling.IActionModification-1.html": {
    "href": "api/ProjectL.GameScene.ActionHandling.IActionModification-1.html",
    "title": "Interface IActionModification<T> | Project L Unity",
    "summary": "Interface IActionModification<T> Namespace ProjectL.GameScene.ActionHandling Assembly Assembly-CSharp.dll public interface IActionModification<out T> where T : GameAction Type Parameters T"
  },
  "api/ProjectL.GameScene.ActionHandling.IHumanPlayerActionCreator-1.html": {
    "href": "api/ProjectL.GameScene.ActionHandling.IHumanPlayerActionCreator-1.html",
    "title": "Interface IHumanPlayerActionCreator<T> | Project L Unity",
    "summary": "Interface IHumanPlayerActionCreator<T> Namespace ProjectL.GameScene.ActionHandling Assembly Assembly-CSharp.dll public interface IHumanPlayerActionCreator<out T> where T : GameAction Type Parameters T Methods OnActionCanceled() void OnActionCanceled() OnActionConfirmed() void OnActionConfirmed() OnActionRequested() void OnActionRequested() Events ActionModifiedEventHandler event Action<IActionModification<out T>>? ActionModifiedEventHandler Event Type Action<IActionModification<T>>"
  },
  "api/ProjectL.GameScene.ActionHandling.PlaceTetrominoActionConstructor.html": {
    "href": "api/ProjectL.GameScene.ActionHandling.PlaceTetrominoActionConstructor.html",
    "title": "Class PlaceTetrominoActionConstructor | Project L Unity",
    "summary": "Class PlaceTetrominoActionConstructor Namespace ProjectL.GameScene.ActionHandling Assembly Assembly-CSharp.dll public class PlaceTetrominoActionConstructor : ActionConstructor<PlaceTetrominoAction>, IActionConstructor Inheritance object ActionConstructor<PlaceTetrominoAction> PlaceTetrominoActionConstructor Implements IActionConstructor Inherited Members ActionConstructor<PlaceTetrominoAction>.GetAction<T1>() ActionConstructor<PlaceTetrominoAction>.ApplyActionModification<T1>(IActionModification<T1>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ApplyActionModification(IActionModification<PlaceTetrominoAction>) protected override void ApplyActionModification(IActionModification<PlaceTetrominoAction> change) Parameters change IActionModification<PlaceTetrominoAction> GetAction() protected override PlaceTetrominoAction? GetAction() Returns PlaceTetrominoAction GetMasterAction() public MasterAction? GetMasterAction() Returns MasterAction GetPlacementsQueue() public Queue<PlaceTetrominoAction> GetPlacementsQueue() Returns Queue<PlaceTetrominoAction> Reset() public override void Reset()"
  },
  "api/ProjectL.GameScene.ActionHandling.PlaceTetrominoActionModification.Options.html": {
    "href": "api/ProjectL.GameScene.ActionHandling.PlaceTetrominoActionModification.Options.html",
    "title": "Enum PlaceTetrominoActionModification.Options | Project L Unity",
    "summary": "Enum PlaceTetrominoActionModification.Options Namespace ProjectL.GameScene.ActionHandling Assembly Assembly-CSharp.dll public enum PlaceTetrominoActionModification.Options Fields Placed = 0 Removed = 1"
  },
  "api/ProjectL.GameScene.ActionHandling.PlaceTetrominoActionModification.html": {
    "href": "api/ProjectL.GameScene.ActionHandling.PlaceTetrominoActionModification.html",
    "title": "Class PlaceTetrominoActionModification | Project L Unity",
    "summary": "Class PlaceTetrominoActionModification Namespace ProjectL.GameScene.ActionHandling Assembly Assembly-CSharp.dll public class PlaceTetrominoActionModification : IActionModification<PlaceTetrominoAction> Inheritance object PlaceTetrominoActionModification Implements IActionModification<PlaceTetrominoAction> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PlaceTetrominoActionModification(PlaceTetrominoAction, Options) public PlaceTetrominoActionModification(PlaceTetrominoAction action, PlaceTetrominoActionModification.Options option) Parameters action PlaceTetrominoAction option PlaceTetrominoActionModification.Options Properties Option public PlaceTetrominoActionModification.Options Option { get; } Property Value PlaceTetrominoActionModification.Options Placement public PlaceTetrominoAction Placement { get; } Property Value PlaceTetrominoAction"
  },
  "api/ProjectL.GameScene.ActionHandling.PlaceTetrominoConstructor.html": {
    "href": "api/ProjectL.GameScene.ActionHandling.PlaceTetrominoConstructor.html",
    "title": "Class PlaceTetrominoConstructor | Project L Unity",
    "summary": "Class PlaceTetrominoConstructor Namespace ProjectL.GameScene.ActionHandling Assembly Assembly-CSharp.dll public class PlaceTetrominoConstructor : ActionConstructor<PlaceTetrominoAction>, IActionConstructor Inheritance object ActionConstructor<PlaceTetrominoAction> PlaceTetrominoConstructor Implements IActionConstructor Inherited Members ActionConstructor<PlaceTetrominoAction>.GetAction<T1>() ActionConstructor<PlaceTetrominoAction>.ApplyActionModification<T1>(IActionModification<T1>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ApplyActionModification(IActionModification<PlaceTetrominoAction>) protected override void ApplyActionModification(IActionModification<PlaceTetrominoAction> change) Parameters change IActionModification<PlaceTetrominoAction> GetAction() protected override PlaceTetrominoAction? GetAction() Returns PlaceTetrominoAction GetMasterAction() public MasterAction? GetMasterAction() Returns MasterAction GetPlacementsQueue() public Queue<PlaceTetrominoAction> GetPlacementsQueue() Returns Queue<PlaceTetrominoAction> Reset() public override void Reset()"
  },
  "api/ProjectL.GameScene.ActionHandling.PlayerMode.html": {
    "href": "api/ProjectL.GameScene.ActionHandling.PlayerMode.html",
    "title": "Enum PlayerMode | Project L Unity",
    "summary": "Enum PlayerMode Namespace ProjectL.GameScene.ActionHandling Assembly Assembly-CSharp.dll public enum PlayerMode Fields Interactive = 0 NonInteractive = 1"
  },
  "api/ProjectL.GameScene.ActionHandling.RecycleActionConstructor.html": {
    "href": "api/ProjectL.GameScene.ActionHandling.RecycleActionConstructor.html",
    "title": "Class RecycleActionConstructor | Project L Unity",
    "summary": "Class RecycleActionConstructor Namespace ProjectL.GameScene.ActionHandling Assembly Assembly-CSharp.dll public class RecycleActionConstructor : ActionConstructor<RecycleAction>, IActionConstructor Inheritance object ActionConstructor<RecycleAction> RecycleActionConstructor Implements IActionConstructor Inherited Members ActionConstructor<RecycleAction>.GetAction<T1>() ActionConstructor<RecycleAction>.ApplyActionModification<T1>(IActionModification<T1>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ApplyActionModification(IActionModification<RecycleAction>) protected override void ApplyActionModification(IActionModification<RecycleAction> change) Parameters change IActionModification<RecycleAction> GetAction() protected override RecycleAction? GetAction() Returns RecycleAction Reset() public override void Reset()"
  },
  "api/ProjectL.GameScene.ActionHandling.RecycleActionModification.html": {
    "href": "api/ProjectL.GameScene.ActionHandling.RecycleActionModification.html",
    "title": "Class RecycleActionModification | Project L Unity",
    "summary": "Class RecycleActionModification Namespace ProjectL.GameScene.ActionHandling Assembly Assembly-CSharp.dll public class RecycleActionModification : IActionModification<RecycleAction> Inheritance object RecycleActionModification Implements IActionModification<RecycleAction> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RecycleActionModification(Puzzle, bool) public RecycleActionModification(Puzzle puzzle, bool isSelected) Parameters puzzle Puzzle isSelected bool Properties Color public RecycleAction.Options Color { get; } Property Value RecycleAction.Options IsSelected public bool IsSelected { get; } Property Value bool PuzzleId public uint PuzzleId { get; } Property Value uint"
  },
  "api/ProjectL.GameScene.ActionHandling.RecycleConstructor.html": {
    "href": "api/ProjectL.GameScene.ActionHandling.RecycleConstructor.html",
    "title": "Class RecycleConstructor | Project L Unity",
    "summary": "Class RecycleConstructor Namespace ProjectL.GameScene.ActionHandling Assembly Assembly-CSharp.dll public class RecycleConstructor : ActionConstructor<RecycleAction>, IActionConstructor Inheritance object ActionConstructor<RecycleAction> RecycleConstructor Implements IActionConstructor Inherited Members ActionConstructor<RecycleAction>.GetAction<T1>() ActionConstructor<RecycleAction>.ApplyActionModification<T1>(IActionModification<T1>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ApplyActionModification(IActionModification<RecycleAction>) protected override void ApplyActionModification(IActionModification<RecycleAction> change) Parameters change IActionModification<RecycleAction> GetAction() protected override RecycleAction? GetAction() Returns RecycleAction Reset() public override void Reset()"
  },
  "api/ProjectL.GameScene.ActionHandling.SelectRewardAction.html": {
    "href": "api/ProjectL.GameScene.ActionHandling.SelectRewardAction.html",
    "title": "Class SelectRewardAction | Project L Unity",
    "summary": "Class SelectRewardAction Namespace ProjectL.GameScene.ActionHandling Assembly Assembly-CSharp.dll Represents the selection of a reward tetromino from a list of available options. public class SelectRewardAction : GameAction Inheritance object GameAction SelectRewardAction Inherited Members GameAction.Accept(IActionProcessor) GameAction.AcceptAsync(IAsyncActionProcessor, CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SelectRewardAction(List<TetrominoShape>?, TetrominoShape) Initializes a new instance of the SelectRewardAction class. public SelectRewardAction(List<TetrominoShape>? rewardOptions, TetrominoShape selectedReward) Parameters rewardOptions List<TetrominoShape> The list of available tetrominos to choose from as rewards. selectedReward TetrominoShape The tetromino selected as the reward. Properties RewardOptions The list of available tetrominos to choose from as rewards. public List<TetrominoShape>? RewardOptions { get; } Property Value List<TetrominoShape> SelectedReward The tetromino selected as the reward. public TetrominoShape SelectedReward { get; } Property Value TetrominoShape"
  },
  "api/ProjectL.GameScene.ActionHandling.SelectRewardActionConstructor.html": {
    "href": "api/ProjectL.GameScene.ActionHandling.SelectRewardActionConstructor.html",
    "title": "Class SelectRewardActionConstructor | Project L Unity",
    "summary": "Class SelectRewardActionConstructor Namespace ProjectL.GameScene.ActionHandling Assembly Assembly-CSharp.dll public class SelectRewardActionConstructor : ActionConstructor<SelectRewardAction>, IActionConstructor Inheritance object ActionConstructor<SelectRewardAction> SelectRewardActionConstructor Implements IActionConstructor Inherited Members ActionConstructor<SelectRewardAction>.GetAction<T1>() ActionConstructor<SelectRewardAction>.ApplyActionModification<T1>(IActionModification<T1>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ApplyActionModification(IActionModification<SelectRewardAction>) protected override void ApplyActionModification(IActionModification<SelectRewardAction> change) Parameters change IActionModification<SelectRewardAction> GetAction() protected override SelectRewardAction? GetAction() Returns SelectRewardAction Reset() public override void Reset()"
  },
  "api/ProjectL.GameScene.ActionHandling.SelectRewardActionModification.html": {
    "href": "api/ProjectL.GameScene.ActionHandling.SelectRewardActionModification.html",
    "title": "Class SelectRewardActionModification | Project L Unity",
    "summary": "Class SelectRewardActionModification Namespace ProjectL.GameScene.ActionHandling Assembly Assembly-CSharp.dll public class SelectRewardActionModification : IActionModification<SelectRewardAction> Inheritance object SelectRewardActionModification Implements IActionModification<SelectRewardAction> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SelectRewardActionModification(TetrominoShape?) public SelectRewardActionModification(TetrominoShape? selectedReward) Parameters selectedReward TetrominoShape? Properties SelectedReward public TetrominoShape? SelectedReward { get; } Property Value TetrominoShape?"
  },
  "api/ProjectL.GameScene.ActionHandling.SelectRewardConstructor.html": {
    "href": "api/ProjectL.GameScene.ActionHandling.SelectRewardConstructor.html",
    "title": "Class SelectRewardConstructor | Project L Unity",
    "summary": "Class SelectRewardConstructor Namespace ProjectL.GameScene.ActionHandling Assembly Assembly-CSharp.dll public class SelectRewardConstructor : ActionConstructor<SelectRewardAction>, IActionConstructor Inheritance object ActionConstructor<SelectRewardAction> SelectRewardConstructor Implements IActionConstructor Inherited Members ActionConstructor<SelectRewardAction>.GetAction<T1>() ActionConstructor<SelectRewardAction>.ApplyActionModification<T1>(IActionModification<T1>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ApplyActionModification(IActionModification<SelectRewardAction>) protected override void ApplyActionModification(IActionModification<SelectRewardAction> change) Parameters change IActionModification<SelectRewardAction> GetAction() protected override SelectRewardAction? GetAction() Returns SelectRewardAction Reset() public override void Reset()"
  },
  "api/ProjectL.GameScene.ActionHandling.TakeBasicActionConstructor.html": {
    "href": "api/ProjectL.GameScene.ActionHandling.TakeBasicActionConstructor.html",
    "title": "Class TakeBasicActionConstructor | Project L Unity",
    "summary": "Class TakeBasicActionConstructor Namespace ProjectL.GameScene.ActionHandling Assembly Assembly-CSharp.dll public class TakeBasicActionConstructor : ActionConstructor<TakeBasicTetrominoAction>, IActionConstructor Inheritance object ActionConstructor<TakeBasicTetrominoAction> TakeBasicActionConstructor Implements IActionConstructor Inherited Members ActionConstructor<TakeBasicTetrominoAction>.GetAction<T1>() ActionConstructor<TakeBasicTetrominoAction>.ApplyActionModification<T1>(IActionModification<T1>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ApplyActionModification(IActionModification<TakeBasicTetrominoAction>) protected override void ApplyActionModification(IActionModification<TakeBasicTetrominoAction> change) Parameters change IActionModification<TakeBasicTetrominoAction> GetAction() protected override TakeBasicTetrominoAction? GetAction() Returns TakeBasicTetrominoAction Reset() public override void Reset()"
  },
  "api/ProjectL.GameScene.ActionHandling.TakeBasicConstructor.html": {
    "href": "api/ProjectL.GameScene.ActionHandling.TakeBasicConstructor.html",
    "title": "Class TakeBasicConstructor | Project L Unity",
    "summary": "Class TakeBasicConstructor Namespace ProjectL.GameScene.ActionHandling Assembly Assembly-CSharp.dll public class TakeBasicConstructor : ActionConstructor<TakeBasicTetrominoAction>, IActionConstructor Inheritance object ActionConstructor<TakeBasicTetrominoAction> TakeBasicConstructor Implements IActionConstructor Inherited Members ActionConstructor<TakeBasicTetrominoAction>.GetAction<T1>() ActionConstructor<TakeBasicTetrominoAction>.ApplyActionModification<T1>(IActionModification<T1>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ApplyActionModification(IActionModification<TakeBasicTetrominoAction>) protected override void ApplyActionModification(IActionModification<TakeBasicTetrominoAction> change) Parameters change IActionModification<TakeBasicTetrominoAction> GetAction() protected override TakeBasicTetrominoAction? GetAction() Returns TakeBasicTetrominoAction Reset() public override void Reset()"
  },
  "api/ProjectL.GameScene.ActionHandling.TakeBasicTetrominoActionModification.html": {
    "href": "api/ProjectL.GameScene.ActionHandling.TakeBasicTetrominoActionModification.html",
    "title": "Class TakeBasicTetrominoActionModification | Project L Unity",
    "summary": "Class TakeBasicTetrominoActionModification Namespace ProjectL.GameScene.ActionHandling Assembly Assembly-CSharp.dll public class TakeBasicTetrominoActionModification : IActionModification<TakeBasicTetrominoAction> Inheritance object TakeBasicTetrominoActionModification Implements IActionModification<TakeBasicTetrominoAction> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TakeBasicTetrominoActionModification(bool) public TakeBasicTetrominoActionModification(bool isSelected) Parameters isSelected bool Properties IsSelected public bool IsSelected { get; } Property Value bool"
  },
  "api/ProjectL.GameScene.ActionHandling.TakePuzzleActionConstructor.html": {
    "href": "api/ProjectL.GameScene.ActionHandling.TakePuzzleActionConstructor.html",
    "title": "Class TakePuzzleActionConstructor | Project L Unity",
    "summary": "Class TakePuzzleActionConstructor Namespace ProjectL.GameScene.ActionHandling Assembly Assembly-CSharp.dll public class TakePuzzleActionConstructor : ActionConstructor<TakePuzzleAction>, IActionConstructor Inheritance object ActionConstructor<TakePuzzleAction> TakePuzzleActionConstructor Implements IActionConstructor Inherited Members ActionConstructor<TakePuzzleAction>.GetAction<T1>() ActionConstructor<TakePuzzleAction>.ApplyActionModification<T1>(IActionModification<T1>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ApplyActionModification(IActionModification<TakePuzzleAction>) protected override void ApplyActionModification(IActionModification<TakePuzzleAction> change) Parameters change IActionModification<TakePuzzleAction> GetAction() protected override TakePuzzleAction? GetAction() Returns TakePuzzleAction Reset() public override void Reset()"
  },
  "api/ProjectL.GameScene.ActionHandling.TakePuzzleActionModification.html": {
    "href": "api/ProjectL.GameScene.ActionHandling.TakePuzzleActionModification.html",
    "title": "Class TakePuzzleActionModification | Project L Unity",
    "summary": "Class TakePuzzleActionModification Namespace ProjectL.GameScene.ActionHandling Assembly Assembly-CSharp.dll public class TakePuzzleActionModification : IActionModification<TakePuzzleAction> Inheritance object TakePuzzleActionModification Implements IActionModification<TakePuzzleAction> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TakePuzzleActionModification(TakePuzzleAction?) public TakePuzzleActionModification(TakePuzzleAction? action) Parameters action TakePuzzleAction Properties Action public TakePuzzleAction? Action { get; } Property Value TakePuzzleAction"
  },
  "api/ProjectL.GameScene.ActionHandling.TakePuzzleConstructor.html": {
    "href": "api/ProjectL.GameScene.ActionHandling.TakePuzzleConstructor.html",
    "title": "Class TakePuzzleConstructor | Project L Unity",
    "summary": "Class TakePuzzleConstructor Namespace ProjectL.GameScene.ActionHandling Assembly Assembly-CSharp.dll public class TakePuzzleConstructor : ActionConstructor<TakePuzzleAction>, IActionConstructor Inheritance object ActionConstructor<TakePuzzleAction> TakePuzzleConstructor Implements IActionConstructor Inherited Members ActionConstructor<TakePuzzleAction>.GetAction<T1>() ActionConstructor<TakePuzzleAction>.ApplyActionModification<T1>(IActionModification<T1>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ApplyActionModification(IActionModification<TakePuzzleAction>) protected override void ApplyActionModification(IActionModification<TakePuzzleAction> change) Parameters change IActionModification<TakePuzzleAction> GetAction() protected override TakePuzzleAction? GetAction() Returns TakePuzzleAction Reset() public override void Reset()"
  },
  "api/ProjectL.GameScene.ActionHandling.html": {
    "href": "api/ProjectL.GameScene.ActionHandling.html",
    "title": "Namespace ProjectL.GameScene.ActionHandling | Project L Unity",
    "summary": "Namespace ProjectL.GameScene.ActionHandling Classes ActionConstructor<T> ChangeTetrominoActionConstructor ChangeTetrominoActionModification HumanPlayerActionCreationManager PlaceTetrominoActionConstructor PlaceTetrominoActionModification RecycleActionConstructor RecycleActionModification SelectRewardAction Represents the selection of a reward tetromino from a list of available options. SelectRewardActionConstructor SelectRewardActionModification TakeBasicActionConstructor TakeBasicTetrominoActionModification TakePuzzleActionConstructor TakePuzzleActionModification Interfaces IAIPlayerActionAnimator<T> IActionConstructor IActionCreationController IActionModification<T> IHumanPlayerActionCreator<T> Enums ActionMode PlaceTetrominoActionModification.Options PlayerMode"
  },
  "api/ProjectL.GameScene.ActionZones.ActionButton.html": {
    "href": "api/ProjectL.GameScene.ActionZones.ActionButton.html",
    "title": "Class ActionButton | Project L Unity",
    "summary": "Class ActionButton Namespace ProjectL.GameScene.ActionZones Assembly Assembly-CSharp.dll [RequireComponent(typeof(Image))] [RequireComponent(typeof(Button))] public class ActionButton : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ActionButton Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties CanActionBeCreated public bool CanActionBeCreated { get; set; } Property Value bool Mode public PlayerMode Mode { get; set; } Property Value PlayerMode Methods DeselectCurrentButton() public static void DeselectCurrentButton() ManuallySelectButton() public void ManuallySelectButton() Events CancelActionEventHandler public static event Action? CancelActionEventHandler Event Type Action SelectActionEventHandler public event Action? SelectActionEventHandler Event Type Action"
  },
  "api/ProjectL.GameScene.ActionZones.ActionZoneBase.html": {
    "href": "api/ProjectL.GameScene.ActionZones.ActionZoneBase.html",
    "title": "Class ActionZoneBase | Project L Unity",
    "summary": "Class ActionZoneBase Namespace ProjectL.GameScene.ActionZones Assembly Assembly-CSharp.dll public abstract class ActionZoneBase : MonoBehaviour, IActionCreationController Inheritance object Object Component Behaviour MonoBehaviour ActionZoneBase Implements IActionCreationController Derived PieceActionZone PuzzleActionZone Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields _actionButtonsPanel [SerializeField] protected GameObject? _actionButtonsPanel Field Value GameObject _confirmButton [SerializeField] protected Button? _confirmButton Field Value Button _finishingTouchesButton [SerializeField] protected Button? _finishingTouchesButton Field Value Button _selectRewardButton [SerializeField] protected Button? _selectRewardButton Field Value Button Properties CanConfirmAction public bool CanConfirmAction { get; set; } Property Value bool CanSelectReward public bool CanSelectReward { get; set; } Property Value bool CanUseFinishingTouchesButton protected bool CanUseFinishingTouchesButton { get; set; } Property Value bool Methods AddListener(HumanPlayerActionCreationManager) public virtual void AddListener(HumanPlayerActionCreationManager acm) Parameters acm HumanPlayerActionCreationManager AddSelectRewardListener(HumanPlayerActionCreationManager) public void AddSelectRewardListener(HumanPlayerActionCreationManager acm) Parameters acm HumanPlayerActionCreationManager Awake() protected virtual void Awake() EnabledButtonsBasedOnGameState(GameInfo, PlayerInfo, TurnInfo) public abstract void EnabledButtonsBasedOnGameState(GameState.GameInfo gameInfo, PlayerState.PlayerInfo playerInfo, TurnInfo turnInfo) Parameters gameInfo GameState.GameInfo playerInfo PlayerState.PlayerInfo turnInfo TurnInfo ManuallyClickFinishingTouchesButton() public void ManuallyClickFinishingTouchesButton() ManuallyClickSelectRewardButton() public void ManuallyClickSelectRewardButton() RemoveListener(HumanPlayerActionCreationManager) public virtual void RemoveListener(HumanPlayerActionCreationManager acm) Parameters acm HumanPlayerActionCreationManager RemoveSelectRewardListener(HumanPlayerActionCreationManager) public void RemoveSelectRewardListener(HumanPlayerActionCreationManager acm) Parameters acm HumanPlayerActionCreationManager SetActionMode(ActionMode) public void SetActionMode(ActionMode mode) Parameters mode ActionMode SetPlayerMode(PlayerMode) public virtual void SetPlayerMode(PlayerMode mode) Parameters mode PlayerMode SimulateConfirmActionClick() public void SimulateConfirmActionClick()"
  },
  "api/ProjectL.GameScene.ActionZones.ActionZonesManager.Button.html": {
    "href": "api/ProjectL.GameScene.ActionZones.ActionZonesManager.Button.html",
    "title": "Enum ActionZonesManager.Button | Project L Unity",
    "summary": "Enum ActionZonesManager.Button Namespace ProjectL.GameScene.ActionZones Assembly Assembly-CSharp.dll public enum ActionZonesManager.Button Fields ChangeTetromino = 3 EndFinishingTouches = 5 MasterAction = 4 Recycle = 1 SelectReward = 6 TakeBasicTetromino = 2 TakePuzzle = 0"
  },
  "api/ProjectL.GameScene.ActionZones.ActionZonesManager.DisposableButtonSelector.html": {
    "href": "api/ProjectL.GameScene.ActionZones.ActionZonesManager.DisposableButtonSelector.html",
    "title": "Class ActionZonesManager.DisposableButtonSelector | Project L Unity",
    "summary": "Class ActionZonesManager.DisposableButtonSelector Namespace ProjectL.GameScene.ActionZones Assembly Assembly-CSharp.dll public class ActionZonesManager.DisposableButtonSelector : IDisposable Inheritance object ActionZonesManager.DisposableButtonSelector Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DisposableButtonSelector(Button) public DisposableButtonSelector(ActionZonesManager.Button button) Parameters button ActionZonesManager.Button Methods Dispose() public void Dispose()"
  },
  "api/ProjectL.GameScene.ActionZones.ActionZonesManager.SimulateButtonClickDisposable.html": {
    "href": "api/ProjectL.GameScene.ActionZones.ActionZonesManager.SimulateButtonClickDisposable.html",
    "title": "Class ActionZonesManager.SimulateButtonClickDisposable | Project L Unity",
    "summary": "Class ActionZonesManager.SimulateButtonClickDisposable Namespace ProjectL.GameScene.ActionZones Assembly Assembly-CSharp.dll public class ActionZonesManager.SimulateButtonClickDisposable : IDisposable Inheritance object ActionZonesManager.SimulateButtonClickDisposable Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SimulateButtonClickDisposable(Button) public SimulateButtonClickDisposable(ActionZonesManager.Button button) Parameters button ActionZonesManager.Button Methods Dispose() public void Dispose()"
  },
  "api/ProjectL.GameScene.ActionZones.ActionZonesManager.html": {
    "href": "api/ProjectL.GameScene.ActionZones.ActionZonesManager.html",
    "title": "Class ActionZonesManager | Project L Unity",
    "summary": "Class ActionZonesManager Namespace ProjectL.GameScene.ActionZones Assembly Assembly-CSharp.dll public class ActionZonesManager : GraphicsManager<ActionZonesManager>, GameGraphicsSystem.IGraphicsManager, ICurrentTurnListener Inheritance object Object Component Behaviour MonoBehaviour StaticInstance<ActionZonesManager> GraphicsManager<ActionZonesManager> ActionZonesManager Implements GameGraphicsSystem.IGraphicsManager ICurrentTurnListener Inherited Members GraphicsManager<ActionZonesManager>.Awake() GraphicsManager<ActionZonesManager>.Start() StaticInstance<ActionZonesManager>.Instance StaticInstance<ActionZonesManager>.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties CanConfirmAction public bool CanConfirmAction { set; } Property Value bool CanSelectReward public bool CanSelectReward { set; } Property Value bool Methods ConnectToActionButtons(HumanPlayerActionCreationManager) public void ConnectToActionButtons(HumanPlayerActionCreationManager acm) Parameters acm HumanPlayerActionCreationManager ConnectToSelectRewardButtons(HumanPlayerActionCreationManager) public void ConnectToSelectRewardButtons(HumanPlayerActionCreationManager acm) Parameters acm HumanPlayerActionCreationManager DisconnectFromActionButtons(HumanPlayerActionCreationManager) public void DisconnectFromActionButtons(HumanPlayerActionCreationManager acm) Parameters acm HumanPlayerActionCreationManager DisconnectFromSelectRewardButton(HumanPlayerActionCreationManager) public void DisconnectFromSelectRewardButton(HumanPlayerActionCreationManager acm) Parameters acm HumanPlayerActionCreationManager Init(GameCore) public override void Init(GameCore game) Parameters game GameCore ManuallyClickTakePuzzleButton() public void ManuallyClickTakePuzzleButton()"
  },
  "api/ProjectL.GameScene.ActionZones.PieceActionZone.html": {
    "href": "api/ProjectL.GameScene.ActionZones.PieceActionZone.html",
    "title": "Class PieceActionZone | Project L Unity",
    "summary": "Class PieceActionZone Namespace ProjectL.GameScene.ActionZones Assembly Assembly-CSharp.dll public class PieceActionZone : ActionZoneBase, IActionCreationController Inheritance object Object Component Behaviour MonoBehaviour ActionZoneBase PieceActionZone Implements IActionCreationController Inherited Members ActionZoneBase._actionButtonsPanel ActionZoneBase._finishingTouchesButton ActionZoneBase._selectRewardButton ActionZoneBase._confirmButton ActionZoneBase.CanConfirmAction ActionZoneBase.CanSelectReward ActionZoneBase.CanUseFinishingTouchesButton ActionZoneBase.ManuallyClickSelectRewardButton() ActionZoneBase.ManuallyClickFinishingTouchesButton() ActionZoneBase.SetActionMode(ActionMode) ActionZoneBase.AddSelectRewardListener(HumanPlayerActionCreationManager) ActionZoneBase.RemoveSelectRewardListener(HumanPlayerActionCreationManager) ActionZoneBase.SimulateConfirmActionClick() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods AddListener(HumanPlayerActionCreationManager) public override void AddListener(HumanPlayerActionCreationManager acm) Parameters acm HumanPlayerActionCreationManager Awake() protected override void Awake() CanMasterAction(PlayerInfo, TurnInfo) public bool CanMasterAction(PlayerState.PlayerInfo playerInfo, TurnInfo turnInfo) Parameters playerInfo PlayerState.PlayerInfo turnInfo TurnInfo Returns bool EnabledButtonsBasedOnGameState(GameInfo, PlayerInfo, TurnInfo) public override void EnabledButtonsBasedOnGameState(GameState.GameInfo gameInfo, PlayerState.PlayerInfo playerInfo, TurnInfo turnInfo) Parameters gameInfo GameState.GameInfo playerInfo PlayerState.PlayerInfo turnInfo TurnInfo ManuallyClickChangeTetrominoButton() public void ManuallyClickChangeTetrominoButton() ManuallyClickMasterActionButton() public void ManuallyClickMasterActionButton() ManuallyClickTakeBasicTetrominoButton() public void ManuallyClickTakeBasicTetrominoButton() RemoveListener(HumanPlayerActionCreationManager) public override void RemoveListener(HumanPlayerActionCreationManager acm) Parameters acm HumanPlayerActionCreationManager SetPlayerMode(PlayerMode) public override void SetPlayerMode(PlayerMode mode) Parameters mode PlayerMode"
  },
  "api/ProjectL.GameScene.ActionZones.PuzzleActionZone.html": {
    "href": "api/ProjectL.GameScene.ActionZones.PuzzleActionZone.html",
    "title": "Class PuzzleActionZone | Project L Unity",
    "summary": "Class PuzzleActionZone Namespace ProjectL.GameScene.ActionZones Assembly Assembly-CSharp.dll public class PuzzleActionZone : ActionZoneBase, IActionCreationController Inheritance object Object Component Behaviour MonoBehaviour ActionZoneBase PuzzleActionZone Implements IActionCreationController Inherited Members ActionZoneBase._actionButtonsPanel ActionZoneBase._finishingTouchesButton ActionZoneBase._selectRewardButton ActionZoneBase._confirmButton ActionZoneBase.CanConfirmAction ActionZoneBase.CanSelectReward ActionZoneBase.CanUseFinishingTouchesButton ActionZoneBase.ManuallyClickSelectRewardButton() ActionZoneBase.ManuallyClickFinishingTouchesButton() ActionZoneBase.SetActionMode(ActionMode) ActionZoneBase.AddSelectRewardListener(HumanPlayerActionCreationManager) ActionZoneBase.RemoveSelectRewardListener(HumanPlayerActionCreationManager) ActionZoneBase.SimulateConfirmActionClick() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods AddListener(HumanPlayerActionCreationManager) public override void AddListener(HumanPlayerActionCreationManager acm) Parameters acm HumanPlayerActionCreationManager Awake() protected override void Awake() EnabledButtonsBasedOnGameState(GameInfo, PlayerInfo, TurnInfo) public override void EnabledButtonsBasedOnGameState(GameState.GameInfo gameInfo, PlayerState.PlayerInfo playerInfo, TurnInfo turnInfo) Parameters gameInfo GameState.GameInfo playerInfo PlayerState.PlayerInfo turnInfo TurnInfo ManuallyClickRecycleButton() public void ManuallyClickRecycleButton() ManuallyClickTakePuzzleButton() public void ManuallyClickTakePuzzleButton() RemoveListener(HumanPlayerActionCreationManager) public override void RemoveListener(HumanPlayerActionCreationManager acm) Parameters acm HumanPlayerActionCreationManager SetPlayerMode(PlayerMode) public override void SetPlayerMode(PlayerMode mode) Parameters mode PlayerMode"
  },
  "api/ProjectL.GameScene.ActionZones.html": {
    "href": "api/ProjectL.GameScene.ActionZones.html",
    "title": "Namespace ProjectL.GameScene.ActionZones | Project L Unity",
    "summary": "Namespace ProjectL.GameScene.ActionZones Classes ActionButton ActionZoneBase ActionZonesManager ActionZonesManager.DisposableButtonSelector PieceActionZone PuzzleActionZone Enums ActionZonesManager.Button"
  },
  "api/ProjectL.GameScene.GraphicsManager-1.html": {
    "href": "api/ProjectL.GameScene.GraphicsManager-1.html",
    "title": "Class GraphicsManager<TSelf> | Project L Unity",
    "summary": "Class GraphicsManager<TSelf> Namespace ProjectL.GameScene Assembly Assembly-CSharp.dll public abstract class GraphicsManager<TSelf> : StaticInstance<TSelf>, GameGraphicsSystem.IGraphicsManager where TSelf : GraphicsManager<TSelf> Type Parameters TSelf Inheritance object Object Component Behaviour MonoBehaviour StaticInstance<TSelf> GraphicsManager<TSelf> Implements GameGraphicsSystem.IGraphicsManager Derived HumanPlayerActionCreationManager ActionZonesManager AIPlayerActionAnimationManager PlayerStatsManager SharedReserveManager PlayerZoneManager PuzzleZoneManager Inherited Members StaticInstance<TSelf>.Instance StaticInstance<TSelf>.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods Awake() Called when the script instance is being loaded. Ensures that the instance is assigned to the current object. protected override void Awake() Init(GameCore) public abstract void Init(GameCore game) Parameters game GameCore Start() protected virtual void Start()"
  },
  "api/ProjectL.GameScene.Management.AIPlayerActionAnimationManager.html": {
    "href": "api/ProjectL.GameScene.Management.AIPlayerActionAnimationManager.html",
    "title": "Class AIPlayerActionAnimationManager | Project L Unity",
    "summary": "Class AIPlayerActionAnimationManager Namespace ProjectL.GameScene.Management Assembly Assembly-CSharp.dll public class AIPlayerActionAnimationManager : GraphicsManager<AIPlayerActionAnimationManager>, GameGraphicsSystem.IGraphicsManager, IAsyncActionProcessor, IPlayerStatePuzzleFinishedAsyncListener Inheritance object Object Component Behaviour MonoBehaviour StaticInstance<AIPlayerActionAnimationManager> GraphicsManager<AIPlayerActionAnimationManager> AIPlayerActionAnimationManager Implements GameGraphicsSystem.IGraphicsManager IAsyncActionProcessor IPlayerStatePuzzleFinishedAsyncListener Inherited Members GraphicsManager<AIPlayerActionAnimationManager>.Awake() GraphicsManager<AIPlayerActionAnimationManager>.Start() StaticInstance<AIPlayerActionAnimationManager>.Instance StaticInstance<AIPlayerActionAnimationManager>.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods Init(GameCore) public override void Init(GameCore game) Parameters game GameCore"
  },
  "api/ProjectL.GameScene.Management.GameGraphicsSystem.IGraphicsManager.html": {
    "href": "api/ProjectL.GameScene.Management.GameGraphicsSystem.IGraphicsManager.html",
    "title": "Interface GameGraphicsSystem.IGraphicsManager | Project L Unity",
    "summary": "Interface GameGraphicsSystem.IGraphicsManager Namespace ProjectL.GameScene.Management Assembly Assembly-CSharp.dll public interface GameGraphicsSystem.IGraphicsManager Methods Init(GameCore) void Init(GameCore game) Parameters game GameCore"
  },
  "api/ProjectL.GameScene.Management.GameGraphicsSystem.html": {
    "href": "api/ProjectL.GameScene.Management.GameGraphicsSystem.html",
    "title": "Class GameGraphicsSystem | Project L Unity",
    "summary": "Class GameGraphicsSystem Namespace ProjectL.GameScene.Management Assembly Assembly-CSharp.dll public class GameGraphicsSystem : StaticInstance<GameGraphicsSystem> Inheritance object Object Component Behaviour MonoBehaviour StaticInstance<GameGraphicsSystem> GameGraphicsSystem Inherited Members StaticInstance<GameGraphicsSystem>.Instance StaticInstance<GameGraphicsSystem>.Awake() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties IsReadyForInitialization public bool IsReadyForInitialization { get; } Property Value bool Methods Init(GameCore) public void Init(GameCore game) Parameters game GameCore OnDestroy() Called when the MonoBehaviour will be destroyed. Resets the static instance if it matches the current object. protected override void OnDestroy() Register(IGraphicsManager) public void Register(GameGraphicsSystem.IGraphicsManager manager) Parameters manager GameGraphicsSystem.IGraphicsManager ReportNewManagerCreated() public static void ReportNewManagerCreated()"
  },
  "api/ProjectL.GameScene.Management.GameSessionManager.html": {
    "href": "api/ProjectL.GameScene.Management.GameSessionManager.html",
    "title": "Class GameSessionManager | Project L Unity",
    "summary": "Class GameSessionManager Namespace ProjectL.GameScene.Management Assembly Assembly-CSharp.dll public class GameSessionManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour GameSessionManager Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object)"
  },
  "api/ProjectL.GameScene.Management.html": {
    "href": "api/ProjectL.GameScene.Management.html",
    "title": "Namespace ProjectL.GameScene.Management | Project L Unity",
    "summary": "Namespace ProjectL.GameScene.Management Classes AIPlayerActionAnimationManager GameGraphicsSystem GameSessionManager Interfaces GameGraphicsSystem.IGraphicsManager"
  },
  "api/ProjectL.GameScene.MessageBoxes.ErrorAlertBox.html": {
    "href": "api/ProjectL.GameScene.MessageBoxes.ErrorAlertBox.html",
    "title": "Class ErrorAlertBox | Project L Unity",
    "summary": "Class ErrorAlertBox Namespace ProjectL.GameScene.MessageBoxes Assembly Assembly-CSharp.dll Manages the ErrorMessageBox prefab. public class ErrorAlertBox : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ErrorAlertBox Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods OnMainMenuButtonClick() Handles the click event for the \"Main Menu\" button. Returns to main menu. public void OnMainMenuButtonClick() OnOpenLogButtonClick() Handles the click event for the \"Open log\" button. Opens the logger UI. public void OnOpenLogButtonClick()"
  },
  "api/ProjectL.GameScene.MessageBoxes.GameEndedBox.html": {
    "href": "api/ProjectL.GameScene.MessageBoxes.GameEndedBox.html",
    "title": "Class GameEndedBox | Project L Unity",
    "summary": "Class GameEndedBox Namespace ProjectL.GameScene.MessageBoxes Assembly Assembly-CSharp.dll Manages the ErrorMessageBox prefab. public class GameEndedBox : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour GameEndedBox Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods OnCalculateScoreButtonClick() Handles the click event for the \"Calculate score\" button. public void OnCalculateScoreButtonClick()"
  },
  "api/ProjectL.GameScene.MessageBoxes.html": {
    "href": "api/ProjectL.GameScene.MessageBoxes.html",
    "title": "Namespace ProjectL.GameScene.MessageBoxes | Project L Unity",
    "summary": "Namespace ProjectL.GameScene.MessageBoxes Classes ErrorAlertBox Manages the ErrorMessageBox prefab. GameEndedBox Manages the ErrorMessageBox prefab."
  },
  "api/ProjectL.GameScene.PieceZone.DraggableTetromino.html": {
    "href": "api/ProjectL.GameScene.PieceZone.DraggableTetromino.html",
    "title": "Class DraggableTetromino | Project L Unity",
    "summary": "Class DraggableTetromino Namespace ProjectL.GameScene.PieceZone Assembly Assembly-CSharp.dll [RequireComponent(typeof(RectTransform))] [RequireComponent(typeof(Rigidbody2D))] [RequireComponent(typeof(SpriteRenderer))] [RequireComponent(typeof(Collider2D))] public class DraggableTetromino : MonoBehaviour, IHumanPlayerActionCreator<PlaceTetrominoAction>, IAIPlayerActionAnimator<PlaceTetrominoAction>, IPointerDownHandler, IPointerUpHandler, IPointerEnterHandler, IPointerExitHandler, IEventSystemHandler Inheritance object Object Component Behaviour MonoBehaviour DraggableTetromino Implements IHumanPlayerActionCreator<PlaceTetrominoAction> IAIPlayerActionAnimator<PlaceTetrominoAction> IPointerDownHandler IPointerUpHandler IPointerEnterHandler IPointerExitHandler IEventSystemHandler Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Shape public TetrominoShape Shape { get; } Property Value TetrominoShape Methods GetConfiguration() public BinaryImage GetConfiguration() Returns BinaryImage Init(TetrominoButton, bool) public void Init(TetrominoButton spawner, bool isAnimation) Parameters spawner TetrominoButton isAnimation bool PlaceToPosition(Vector3) public void PlaceToPosition(Vector3 center) Parameters center Vector3 StopDragging() public void StopDragging() Events OnStartDraggingEventHandler public event Action<DraggableTetromino>? OnStartDraggingEventHandler Event Type Action<DraggableTetromino> RemovedFromSceneEventHandler public event Action? RemovedFromSceneEventHandler Event Type Action"
  },
  "api/ProjectL.GameScene.PieceZone.ITetrominoSpawnerListener.html": {
    "href": "api/ProjectL.GameScene.PieceZone.ITetrominoSpawnerListener.html",
    "title": "Interface ITetrominoSpawnerListener | Project L Unity",
    "summary": "Interface ITetrominoSpawnerListener Namespace ProjectL.GameScene.PieceZone Assembly Assembly-CSharp.dll public interface ITetrominoSpawnerListener Methods OnTetrominoReturned(TetrominoShape) void OnTetrominoReturned(TetrominoShape tetromino) Parameters tetromino TetrominoShape OnTetrominoSpawned(TetrominoShape) void OnTetrominoSpawned(TetrominoShape tetromino) Parameters tetromino TetrominoShape"
  },
  "api/ProjectL.GameScene.PieceZone.PieceCountColumn.TemporaryPieceCountChanger.html": {
    "href": "api/ProjectL.GameScene.PieceZone.PieceCountColumn.TemporaryPieceCountChanger.html",
    "title": "Class PieceCountColumn.TemporaryPieceCountChanger | Project L Unity",
    "summary": "Class PieceCountColumn.TemporaryPieceCountChanger Namespace ProjectL.GameScene.PieceZone Assembly Assembly-CSharp.dll public class PieceCountColumn.TemporaryPieceCountChanger : IDisposable Inheritance object PieceCountColumn.TemporaryPieceCountChanger Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TemporaryPieceCountChanger(PieceCountColumn, TetrominoShape, int) public TemporaryPieceCountChanger(PieceCountColumn pieceCountColumn, TetrominoShape shape, int newCount) Parameters pieceCountColumn PieceCountColumn shape TetrominoShape newCount int Methods Dispose() public void Dispose()"
  },
  "api/ProjectL.GameScene.PieceZone.PieceCountColumn.html": {
    "href": "api/ProjectL.GameScene.PieceZone.PieceCountColumn.html",
    "title": "Class PieceCountColumn | Project L Unity",
    "summary": "Class PieceCountColumn Namespace ProjectL.GameScene.PieceZone Assembly Assembly-CSharp.dll public class PieceCountColumn : MonoBehaviour, ITetrominoCollectionListener, ITetrominoCollectionNotifier Inheritance object Object Component Behaviour MonoBehaviour PieceCountColumn Implements ITetrominoCollectionListener ITetrominoCollectionNotifier Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods AddListener(ITetrominoCollectionListener) public void AddListener(ITetrominoCollectionListener listener) Parameters listener ITetrominoCollectionListener CreateTemporaryCountDecreaser(TetrominoShape) public PieceCountColumn.TemporaryPieceCountChanger CreateTemporaryCountDecreaser(TetrominoShape shape) Parameters shape TetrominoShape Returns PieceCountColumn.TemporaryPieceCountChanger CreateTemporaryCountIncreaser(TetrominoShape) public PieceCountColumn.TemporaryPieceCountChanger CreateTemporaryCountIncreaser(TetrominoShape shape) Parameters shape TetrominoShape Returns PieceCountColumn.TemporaryPieceCountChanger DecrementDisplayCount(TetrominoShape) public void DecrementDisplayCount(TetrominoShape shape) Parameters shape TetrominoShape GetDisplayCount(TetrominoShape) public int GetDisplayCount(TetrominoShape shape) Parameters shape TetrominoShape Returns int IncrementDisplayCount(TetrominoShape) public void IncrementDisplayCount(TetrominoShape shape) Parameters shape TetrominoShape Init(int, ITetrominoCollectionNotifier, bool) public void Init(int numInitialTetrominos, ITetrominoCollectionNotifier notifier, bool shouldColorGains = false) Parameters numInitialTetrominos int notifier ITetrominoCollectionNotifier shouldColorGains bool RemoveListener(ITetrominoCollectionListener) public void RemoveListener(ITetrominoCollectionListener listener) Parameters listener ITetrominoCollectionListener ResetColumn() public void ResetColumn() SetColor(Color) public void SetColor(Color color) Parameters color Color"
  },
  "api/ProjectL.GameScene.PieceZone.PieceCounter.html": {
    "href": "api/ProjectL.GameScene.PieceZone.PieceCounter.html",
    "title": "Class PieceCounter | Project L Unity",
    "summary": "Class PieceCounter Namespace ProjectL.GameScene.PieceZone Assembly Assembly-CSharp.dll public class PieceCounter : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour PieceCounter Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Count public int Count { get; set; } Property Value int Methods SetColor(Color) public void SetColor(Color color) Parameters color Color SetColorAfterSeconds(Color, float) public void SetColorAfterSeconds(Color color, float secondDelay) Parameters color Color secondDelay float"
  },
  "api/ProjectL.GameScene.PieceZone.PieceZoneManager.html": {
    "href": "api/ProjectL.GameScene.PieceZone.PieceZoneManager.html",
    "title": "Class PieceZoneManager | Project L Unity",
    "summary": "Class PieceZoneManager Namespace ProjectL.GameScene.PieceZone Assembly Assembly-CSharp.dll public class PieceZoneManager : StaticInstance<PieceZoneManager>, ITetrominoCollectionListener, IActionCreationController, IAIPlayerActionAnimator<TakeBasicTetrominoAction>, IAIPlayerActionAnimator<ChangeTetrominoAction>, IAIPlayerActionAnimator<SelectRewardAction>, IHumanPlayerActionCreator<TakeBasicTetrominoAction>, IHumanPlayerActionCreator<ChangeTetrominoAction>, IHumanPlayerActionCreator<SelectRewardAction> Inheritance object Object Component Behaviour MonoBehaviour StaticInstance<PieceZoneManager> PieceZoneManager Implements ITetrominoCollectionListener IActionCreationController IAIPlayerActionAnimator<TakeBasicTetrominoAction> IAIPlayerActionAnimator<ChangeTetrominoAction> IAIPlayerActionAnimator<SelectRewardAction> IHumanPlayerActionCreator<TakeBasicTetrominoAction> IHumanPlayerActionCreator<ChangeTetrominoAction> IHumanPlayerActionCreator<SelectRewardAction> Inherited Members StaticInstance<PieceZoneManager>.Instance StaticInstance<PieceZoneManager>.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods Awake() Called when the script instance is being loaded. Ensures that the instance is assigned to the current object. protected override void Awake() GetPlaceTetrominoActionAnimator(TetrominoShape) public IAIPlayerActionAnimator<PlaceTetrominoAction> GetPlaceTetrominoActionAnimator(TetrominoShape shape) Parameters shape TetrominoShape Returns IAIPlayerActionAnimator<PlaceTetrominoAction> RegisterListener(ITetrominoSpawnerListener) public void RegisterListener(ITetrominoSpawnerListener listener) Parameters listener ITetrominoSpawnerListener ReportButtonClick(TetrominoButton) public void ReportButtonClick(TetrominoButton button) Parameters button TetrominoButton SetCurrentTetrominoColumn(TetrominoCountsColumn) public void SetCurrentTetrominoColumn(TetrominoCountsColumn column) Parameters column TetrominoCountsColumn"
  },
  "api/ProjectL.GameScene.PieceZone.PieceZoneMode.html": {
    "href": "api/ProjectL.GameScene.PieceZone.PieceZoneMode.html",
    "title": "Enum PieceZoneMode | Project L Unity",
    "summary": "Enum PieceZoneMode Namespace ProjectL.GameScene.PieceZone Assembly Assembly-CSharp.dll public enum PieceZoneMode Fields ChangeTetromino = 3 Disabled = 0 SelectReward = 2 Spawning = 1"
  },
  "api/ProjectL.GameScene.PieceZone.PlayerStatsManager.html": {
    "href": "api/ProjectL.GameScene.PieceZone.PlayerStatsManager.html",
    "title": "Class PlayerStatsManager | Project L Unity",
    "summary": "Class PlayerStatsManager Namespace ProjectL.GameScene.PieceZone Assembly Assembly-CSharp.dll public class PlayerStatsManager : GraphicsManager<PlayerStatsManager>, GameGraphicsSystem.IGraphicsManager, ICurrentPlayerListener, ITetrominoSpawnerListener Inheritance object Object Component Behaviour MonoBehaviour StaticInstance<PlayerStatsManager> GraphicsManager<PlayerStatsManager> PlayerStatsManager Implements GameGraphicsSystem.IGraphicsManager ICurrentPlayerListener ITetrominoSpawnerListener Inherited Members GraphicsManager<PlayerStatsManager>.Awake() GraphicsManager<PlayerStatsManager>.Start() StaticInstance<PlayerStatsManager>.Instance StaticInstance<PlayerStatsManager>.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties CurrentPieceColumn public TetrominoCountsColumn? CurrentPieceColumn { get; } Property Value TetrominoCountsColumn Methods Init(GameCore) public override void Init(GameCore game) Parameters game GameCore"
  },
  "api/ProjectL.GameScene.PieceZone.SelectionButtonEffect.html": {
    "href": "api/ProjectL.GameScene.PieceZone.SelectionButtonEffect.html",
    "title": "Enum SelectionButtonEffect | Project L Unity",
    "summary": "Enum SelectionButtonEffect Namespace ProjectL.GameScene.PieceZone Assembly Assembly-CSharp.dll public enum SelectionButtonEffect Fields MakeBigger = 1 MakeSmaller = 2 None = 0"
  },
  "api/ProjectL.GameScene.PieceZone.SelectionSideEffect.html": {
    "href": "api/ProjectL.GameScene.PieceZone.SelectionSideEffect.html",
    "title": "Enum SelectionSideEffect | Project L Unity",
    "summary": "Enum SelectionSideEffect Namespace ProjectL.GameScene.PieceZone Assembly Assembly-CSharp.dll public enum SelectionSideEffect Fields GiveToPlayer = 1 None = 0 RemoveFromPlayer = 2"
  },
  "api/ProjectL.GameScene.PieceZone.SharedReserveManager.html": {
    "href": "api/ProjectL.GameScene.PieceZone.SharedReserveManager.html",
    "title": "Class SharedReserveManager | Project L Unity",
    "summary": "Class SharedReserveManager Namespace ProjectL.GameScene.PieceZone Assembly Assembly-CSharp.dll public class SharedReserveManager : GraphicsManager<SharedReserveManager>, GameGraphicsSystem.IGraphicsManager Inheritance object Object Component Behaviour MonoBehaviour StaticInstance<SharedReserveManager> GraphicsManager<SharedReserveManager> SharedReserveManager Implements GameGraphicsSystem.IGraphicsManager Inherited Members GraphicsManager<SharedReserveManager>.Awake() GraphicsManager<SharedReserveManager>.Start() StaticInstance<SharedReserveManager>.Instance StaticInstance<SharedReserveManager>.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties PieceColumn public TetrominoCountsColumn PieceColumn { get; } Property Value TetrominoCountsColumn Methods GetNumTetrominosLeft() public int[] GetNumTetrominosLeft() Returns int[] Init(GameCore) public override void Init(GameCore game) Parameters game GameCore"
  },
  "api/ProjectL.GameScene.PieceZone.TetrominoButton.DisposableButtonSelector.html": {
    "href": "api/ProjectL.GameScene.PieceZone.TetrominoButton.DisposableButtonSelector.html",
    "title": "Class TetrominoButton.DisposableButtonSelector | Project L Unity",
    "summary": "Class TetrominoButton.DisposableButtonSelector Namespace ProjectL.GameScene.PieceZone Assembly Assembly-CSharp.dll public class TetrominoButton.DisposableButtonSelector : IDisposable Inheritance object TetrominoButton.DisposableButtonSelector Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DisposableButtonSelector(TetrominoButton, SelectionSideEffect, SelectionButtonEffect) public DisposableButtonSelector(TetrominoButton spawner, SelectionSideEffect sideEffect, SelectionButtonEffect buttonEffect) Parameters spawner TetrominoButton sideEffect SelectionSideEffect buttonEffect SelectionButtonEffect Methods Dispose() public void Dispose()"
  },
  "api/ProjectL.GameScene.PieceZone.TetrominoButton.TemporaryButtonSelector.html": {
    "href": "api/ProjectL.GameScene.PieceZone.TetrominoButton.TemporaryButtonSelector.html",
    "title": "Class TetrominoButton.TemporaryButtonSelector | Project L Unity",
    "summary": "Class TetrominoButton.TemporaryButtonSelector Namespace ProjectL.GameScene.PieceZone Assembly Assembly-CSharp.dll public class TetrominoButton.TemporaryButtonSelector : IDisposable Inheritance object TetrominoButton.TemporaryButtonSelector Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TemporaryButtonSelector(TetrominoButton, SelectionSideEffect, SelectionButtonEffect) public TemporaryButtonSelector(TetrominoButton spawner, SelectionSideEffect sideEffect, SelectionButtonEffect buttonEffect) Parameters spawner TetrominoButton sideEffect SelectionSideEffect buttonEffect SelectionButtonEffect Methods Dispose() public void Dispose()"
  },
  "api/ProjectL.GameScene.PieceZone.TetrominoButton.html": {
    "href": "api/ProjectL.GameScene.PieceZone.TetrominoButton.html",
    "title": "Class TetrominoButton | Project L Unity",
    "summary": "Class TetrominoButton Namespace ProjectL.GameScene.PieceZone Assembly Assembly-CSharp.dll [RequireComponent(typeof(RectTransform))] [RequireComponent(typeof(Image))] [RequireComponent(typeof(Button))] public class TetrominoButton : MonoBehaviour, IPointerDownHandler, IPointerUpHandler, IEventSystemHandler Inheritance object Object Component Behaviour MonoBehaviour TetrominoButton Implements IPointerDownHandler IPointerUpHandler IEventSystemHandler Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties IsGrayedOut public bool IsGrayedOut { get; set; } Property Value bool Shape public TetrominoShape Shape { get; } Property Value TetrominoShape Methods AddListener(ITetrominoSpawnerListener) public void AddListener(ITetrominoSpawnerListener listener) Parameters listener ITetrominoSpawnerListener GetDisposableButtonSelector(SelectionSideEffect, SelectionButtonEffect) public TetrominoButton.DisposableButtonSelector GetDisposableButtonSelector(SelectionSideEffect sideEffect = SelectionSideEffect.None, SelectionButtonEffect buttonEffect = SelectionButtonEffect.MakeBigger) Parameters sideEffect SelectionSideEffect buttonEffect SelectionButtonEffect Returns TetrominoButton.DisposableButtonSelector RemoveListener(ITetrominoSpawnerListener) public void RemoveListener(ITetrominoSpawnerListener listener) Parameters listener ITetrominoSpawnerListener SetMode(PieceZoneMode) public void SetMode(PieceZoneMode mode) Parameters mode PieceZoneMode SpawnTetromino(bool) public DraggableTetromino SpawnTetromino(bool isAnimation = false) Parameters isAnimation bool Returns DraggableTetromino"
  },
  "api/ProjectL.GameScene.PieceZone.TetrominoCountsColumn.DisposablePieceCountChanger.html": {
    "href": "api/ProjectL.GameScene.PieceZone.TetrominoCountsColumn.DisposablePieceCountChanger.html",
    "title": "Class TetrominoCountsColumn.DisposablePieceCountChanger | Project L Unity",
    "summary": "Class TetrominoCountsColumn.DisposablePieceCountChanger Namespace ProjectL.GameScene.PieceZone Assembly Assembly-CSharp.dll public class TetrominoCountsColumn.DisposablePieceCountChanger : IDisposable Inheritance object TetrominoCountsColumn.DisposablePieceCountChanger Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DisposablePieceCountChanger(TetrominoCountsColumn, TetrominoShape, int) public DisposablePieceCountChanger(TetrominoCountsColumn pieceCountColumn, TetrominoShape shape, int newCount) Parameters pieceCountColumn TetrominoCountsColumn shape TetrominoShape newCount int Methods Dispose() public void Dispose()"
  },
  "api/ProjectL.GameScene.PieceZone.TetrominoCountsColumn.TemporaryPieceCountChanger.html": {
    "href": "api/ProjectL.GameScene.PieceZone.TetrominoCountsColumn.TemporaryPieceCountChanger.html",
    "title": "Class TetrominoCountsColumn.TemporaryPieceCountChanger | Project L Unity",
    "summary": "Class TetrominoCountsColumn.TemporaryPieceCountChanger Namespace ProjectL.GameScene.PieceZone Assembly Assembly-CSharp.dll public class TetrominoCountsColumn.TemporaryPieceCountChanger : IDisposable Inheritance object TetrominoCountsColumn.TemporaryPieceCountChanger Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TemporaryPieceCountChanger(TetrominoCountsColumn, TetrominoShape, int) public TemporaryPieceCountChanger(TetrominoCountsColumn pieceCountColumn, TetrominoShape shape, int newCount) Parameters pieceCountColumn TetrominoCountsColumn shape TetrominoShape newCount int Methods Dispose() public void Dispose()"
  },
  "api/ProjectL.GameScene.PieceZone.TetrominoCountsColumn.html": {
    "href": "api/ProjectL.GameScene.PieceZone.TetrominoCountsColumn.html",
    "title": "Class TetrominoCountsColumn | Project L Unity",
    "summary": "Class TetrominoCountsColumn Namespace ProjectL.GameScene.PieceZone Assembly Assembly-CSharp.dll public class TetrominoCountsColumn : MonoBehaviour, ITetrominoCollectionListener, ITetrominoCollectionNotifier Inheritance object Object Component Behaviour MonoBehaviour TetrominoCountsColumn Implements ITetrominoCollectionListener ITetrominoCollectionNotifier Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods AddListener(ITetrominoCollectionListener) public void AddListener(ITetrominoCollectionListener listener) Parameters listener ITetrominoCollectionListener CreateTemporaryCountDecreaser(TetrominoShape) public TetrominoCountsColumn.DisposablePieceCountChanger CreateTemporaryCountDecreaser(TetrominoShape shape) Parameters shape TetrominoShape Returns TetrominoCountsColumn.DisposablePieceCountChanger CreateTemporaryCountIncreaser(TetrominoShape) public TetrominoCountsColumn.DisposablePieceCountChanger CreateTemporaryCountIncreaser(TetrominoShape shape) Parameters shape TetrominoShape Returns TetrominoCountsColumn.DisposablePieceCountChanger DecrementDisplayCount(TetrominoShape) public void DecrementDisplayCount(TetrominoShape shape) Parameters shape TetrominoShape GetDisplayCount(TetrominoShape) public int GetDisplayCount(TetrominoShape shape) Parameters shape TetrominoShape Returns int IncrementDisplayCount(TetrominoShape) public void IncrementDisplayCount(TetrominoShape shape) Parameters shape TetrominoShape Init(int, ITetrominoCollectionNotifier, bool) public void Init(int numInitialTetrominos, ITetrominoCollectionNotifier notifier, bool shouldColorGains = false) Parameters numInitialTetrominos int notifier ITetrominoCollectionNotifier shouldColorGains bool RemoveListener(ITetrominoCollectionListener) public void RemoveListener(ITetrominoCollectionListener listener) Parameters listener ITetrominoCollectionListener ResetColumn() public void ResetColumn() SetColor(Color) public void SetColor(Color color) Parameters color Color"
  },
  "api/ProjectL.GameScene.PieceZone.TetrominoSizeManager.html": {
    "href": "api/ProjectL.GameScene.PieceZone.TetrominoSizeManager.html",
    "title": "Class TetrominoSizeManager | Project L Unity",
    "summary": "Class TetrominoSizeManager Namespace ProjectL.GameScene.PieceZone Assembly Assembly-CSharp.dll public class TetrominoSizeManager : StaticInstance<TetrominoSizeManager> Inheritance object Object Component Behaviour MonoBehaviour StaticInstance<TetrominoSizeManager> TetrominoSizeManager Inherited Members StaticInstance<TetrominoSizeManager>.Instance StaticInstance<TetrominoSizeManager>.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties PuzzleZoneScale public float PuzzleZoneScale { get; } Property Value float Methods Awake() Called when the script instance is being loaded. Ensures that the instance is assigned to the current object. protected override void Awake() GetDistanceToPuzzleZone(Transform) public float GetDistanceToPuzzleZone(Transform tr) Parameters tr Transform Returns float"
  },
  "api/ProjectL.GameScene.PieceZone.TetrominoSizer.html": {
    "href": "api/ProjectL.GameScene.PieceZone.TetrominoSizer.html",
    "title": "Class TetrominoSizer | Project L Unity",
    "summary": "Class TetrominoSizer Namespace ProjectL.GameScene.PieceZone Assembly Assembly-CSharp.dll [RequireComponent(typeof(DraggableTetromino))] [RequireComponent(typeof(RectTransform))] public class TetrominoSizer : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour TetrominoSizer Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods Init(TetrominoButton) public void Init(TetrominoButton spawner) Parameters spawner TetrominoButton"
  },
  "api/ProjectL.GameScene.PieceZone.html": {
    "href": "api/ProjectL.GameScene.PieceZone.html",
    "title": "Namespace ProjectL.GameScene.PieceZone | Project L Unity",
    "summary": "Namespace ProjectL.GameScene.PieceZone Classes DraggableTetromino PieceCounter PieceZoneManager PlayerStatsManager SharedReserveManager TetrominoButton TetrominoButton.DisposableButtonSelector TetrominoCountsColumn TetrominoCountsColumn.DisposablePieceCountChanger TetrominoSizeManager TetrominoSizer Interfaces ITetrominoSpawnerListener Enums PieceZoneMode SelectionButtonEffect SelectionSideEffect"
  },
  "api/ProjectL.GameScene.PlayerZone.InteractivePuzzle.html": {
    "href": "api/ProjectL.GameScene.PlayerZone.InteractivePuzzle.html",
    "title": "Class InteractivePuzzle | Project L Unity",
    "summary": "Class InteractivePuzzle Namespace ProjectL.GameScene.PlayerZone Assembly Assembly-CSharp.dll [RequireComponent(typeof(RectTransform))] [RequireComponent(typeof(Image))] [RequireComponent(typeof(GridLayoutGroup))] public class InteractivePuzzle : MonoBehaviour, IColorPuzzleListener, IHumanPlayerActionCreator<PlaceTetrominoAction>, IAIPlayerActionAnimator<PlaceTetrominoAction> Inheritance object Object Component Behaviour MonoBehaviour InteractivePuzzle Implements IColorPuzzleListener IHumanPlayerActionCreator<PlaceTetrominoAction> IAIPlayerActionAnimator<PlaceTetrominoAction> Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties PuzzleId public uint? PuzzleId { get; } Property Value uint? Methods FinishPuzzle() public void FinishPuzzle() GetPlacementCenter(BinaryImage) public Vector2 GetPlacementCenter(BinaryImage placement) Parameters placement BinaryImage Returns Vector2 MakeInteractive(bool) public void MakeInteractive(bool enabled) Parameters enabled bool SetNewPuzzle(ColorPuzzle) public void SetNewPuzzle(ColorPuzzle logicalPuzzle) Parameters logicalPuzzle ColorPuzzle TryGetPuzzleWithId(uint, out InteractivePuzzle?) public static bool TryGetPuzzleWithId(uint puzzleId, out InteractivePuzzle? result) Parameters puzzleId uint result InteractivePuzzle Returns bool TryPlacingToPuzzle(DraggableTetromino) public static void TryPlacingToPuzzle(DraggableTetromino tetromino) Parameters tetromino DraggableTetromino Events ActionModifiedEventHandler public event Action<IActionModification<PlaceTetrominoAction>>? ActionModifiedEventHandler Event Type Action<IActionModification<PlaceTetrominoAction>>"
  },
  "api/ProjectL.GameScene.PlayerZone.PlayerPuzzlesRow.html": {
    "href": "api/ProjectL.GameScene.PlayerZone.PlayerPuzzlesRow.html",
    "title": "Class PlayerPuzzlesRow | Project L Unity",
    "summary": "Class PlayerPuzzlesRow Namespace ProjectL.GameScene.PlayerZone Assembly Assembly-CSharp.dll [RequireComponent(typeof(Image))] [RequireComponent(typeof(BoxCollider2D))] public class PlayerPuzzlesRow : MonoBehaviour, IPlayerStatePuzzleListener, IHumanPlayerActionCreator<TakePuzzleAction> Inheritance object Object Component Behaviour MonoBehaviour PlayerPuzzlesRow Implements IPlayerStatePuzzleListener IHumanPlayerActionCreator<TakePuzzleAction> Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties CanConfirmTakePuzzleAction public bool CanConfirmTakePuzzleAction { set; } Property Value bool IsMouseOverRow public bool IsMouseOverRow { get; } Property Value bool Methods Init(string, PlayerState) public void Init(string playerName, PlayerState playerState) Parameters playerName string playerState PlayerState SetAsCurrentPlayer(bool) public void SetAsCurrentPlayer(bool current) Parameters current bool TryGetPuzzleWithId(uint, out PuzzleSlot?) public bool TryGetPuzzleWithId(uint puzzleId, out PuzzleSlot? result) Parameters puzzleId uint result PuzzleSlot Returns bool"
  },
  "api/ProjectL.GameScene.PlayerZone.PlayerZoneManager.html": {
    "href": "api/ProjectL.GameScene.PlayerZone.PlayerZoneManager.html",
    "title": "Class PlayerZoneManager | Project L Unity",
    "summary": "Class PlayerZoneManager Namespace ProjectL.GameScene.PlayerZone Assembly Assembly-CSharp.dll public class PlayerZoneManager : GraphicsManager<PlayerZoneManager>, GameGraphicsSystem.IGraphicsManager, ICurrentPlayerListener Inheritance object Object Component Behaviour MonoBehaviour StaticInstance<PlayerZoneManager> GraphicsManager<PlayerZoneManager> PlayerZoneManager Implements GameGraphicsSystem.IGraphicsManager ICurrentPlayerListener Inherited Members GraphicsManager<PlayerZoneManager>.Awake() GraphicsManager<PlayerZoneManager>.Start() StaticInstance<PlayerZoneManager>.Instance StaticInstance<PlayerZoneManager>.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties CanConfirmTakePuzzleAction public bool CanConfirmTakePuzzleAction { set; } Property Value bool IsMouseOverCurrentPlayersRow public bool IsMouseOverCurrentPlayersRow { get; } Property Value bool Methods GetPuzzleWithId(uint) public PuzzleSlot? GetPuzzleWithId(uint puzzleId) Parameters puzzleId uint Returns PuzzleSlot Init(GameCore) public override void Init(GameCore game) Parameters game GameCore"
  },
  "api/ProjectL.GameScene.PlayerZone.PuzzleCell.CellState.html": {
    "href": "api/ProjectL.GameScene.PlayerZone.PuzzleCell.CellState.html",
    "title": "Enum PuzzleCell.CellState | Project L Unity",
    "summary": "Enum PuzzleCell.CellState Namespace ProjectL.GameScene.PlayerZone Assembly Assembly-CSharp.dll public enum PuzzleCell.CellState Fields Color = 3 Empty = 1 Filled = 0 Shadow = 2"
  },
  "api/ProjectL.GameScene.PlayerZone.PuzzleCell.html": {
    "href": "api/ProjectL.GameScene.PlayerZone.PuzzleCell.html",
    "title": "Class PuzzleCell | Project L Unity",
    "summary": "Class PuzzleCell Namespace ProjectL.GameScene.PlayerZone Assembly Assembly-CSharp.dll [RequireComponent(typeof(Image))] [RequireComponent(typeof(RectTransform))] [RequireComponent(typeof(BoxCollider2D))] public class PuzzleCell : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour PuzzleCell Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Interactive public bool Interactive { set; } Property Value bool IsColliding public bool IsColliding { get; } Property Value bool State public PuzzleCell.CellState State { get; } Property Value PuzzleCell.CellState Methods SetFillColor(Color) public void SetFillColor(Color color) Parameters color Color SetState(CellState) public void SetState(PuzzleCell.CellState state) Parameters state PuzzleCell.CellState Events OnCollisionStateChangedEventHandler public event Action<DraggableTetromino>? OnCollisionStateChangedEventHandler Event Type Action<DraggableTetromino>"
  },
  "api/ProjectL.GameScene.PlayerZone.PuzzleSlot.DisposablePuzzleHighlighter.html": {
    "href": "api/ProjectL.GameScene.PlayerZone.PuzzleSlot.DisposablePuzzleHighlighter.html",
    "title": "Class PuzzleSlot.DisposablePuzzleHighlighter | Project L Unity",
    "summary": "Class PuzzleSlot.DisposablePuzzleHighlighter Namespace ProjectL.GameScene.PlayerZone Assembly Assembly-CSharp.dll public class PuzzleSlot.DisposablePuzzleHighlighter : IDisposable Inheritance object PuzzleSlot.DisposablePuzzleHighlighter Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DisposablePuzzleHighlighter(PuzzleSlot) public DisposablePuzzleHighlighter(PuzzleSlot slot) Parameters slot PuzzleSlot Methods Dispose() public void Dispose()"
  },
  "api/ProjectL.GameScene.PlayerZone.PuzzleSlot.TemporaryPuzzleHighlighter.html": {
    "href": "api/ProjectL.GameScene.PlayerZone.PuzzleSlot.TemporaryPuzzleHighlighter.html",
    "title": "Class PuzzleSlot.TemporaryPuzzleHighlighter | Project L Unity",
    "summary": "Class PuzzleSlot.TemporaryPuzzleHighlighter Namespace ProjectL.GameScene.PlayerZone Assembly Assembly-CSharp.dll public class PuzzleSlot.TemporaryPuzzleHighlighter : IDisposable Inheritance object PuzzleSlot.TemporaryPuzzleHighlighter Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TemporaryPuzzleHighlighter(PuzzleSlot) public TemporaryPuzzleHighlighter(PuzzleSlot slot) Parameters slot PuzzleSlot Methods Dispose() public void Dispose()"
  },
  "api/ProjectL.GameScene.PlayerZone.PuzzleSlot.html": {
    "href": "api/ProjectL.GameScene.PlayerZone.PuzzleSlot.html",
    "title": "Class PuzzleSlot | Project L Unity",
    "summary": "Class PuzzleSlot Namespace ProjectL.GameScene.PlayerZone Assembly Assembly-CSharp.dll public class PuzzleSlot : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour PuzzleSlot Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties PuzzleId public uint? PuzzleId { get; } Property Value uint? Methods EnableEmptySlotButton(bool) public void EnableEmptySlotButton(bool value) Parameters value bool FinishPuzzle() public void FinishPuzzle() GetDisposablePuzzleHighlighter() public PuzzleSlot.DisposablePuzzleHighlighter GetDisposablePuzzleHighlighter() Returns PuzzleSlot.DisposablePuzzleHighlighter MakePuzzleInteractive(bool) public void MakePuzzleInteractive(bool current) Parameters current bool PlacePuzzle(ColorPuzzle) public void PlacePuzzle(ColorPuzzle puzzle) Parameters puzzle ColorPuzzle Events OnEmptySlotClickEventHandler public event Action? OnEmptySlotClickEventHandler Event Type Action"
  },
  "api/ProjectL.GameScene.PlayerZone.html": {
    "href": "api/ProjectL.GameScene.PlayerZone.html",
    "title": "Namespace ProjectL.GameScene.PlayerZone | Project L Unity",
    "summary": "Namespace ProjectL.GameScene.PlayerZone Classes InteractivePuzzle PlayerPuzzlesRow PlayerZoneManager PuzzleCell PuzzleSlot PuzzleSlot.DisposablePuzzleHighlighter Enums PuzzleCell.CellState"
  },
  "api/ProjectL.GameScene.PuzzleZone.DeckCoverCard.html": {
    "href": "api/ProjectL.GameScene.PuzzleZone.DeckCoverCard.html",
    "title": "Class DeckCoverCard | Project L Unity",
    "summary": "Class DeckCoverCard Namespace ProjectL.GameScene.PuzzleZone Assembly Assembly-CSharp.dll [RequireComponent(typeof(Button))] [RequireComponent(typeof(Image))] public class DeckCoverCard : MonoBehaviour, IPuzzleZoneCard Inheritance object Object Component Behaviour MonoBehaviour DeckCoverCard Implements IPuzzleZoneCard Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods GetDisposableCardDimmer() public PuzzleZoneManager.DisposableSpriteReplacer GetDisposableCardDimmer() Returns PuzzleZoneManager.DisposableSpriteReplacer GetDisposableCardHighlighter() public PuzzleZoneManager.DisposableSpriteReplacer GetDisposableCardHighlighter() Returns PuzzleZoneManager.DisposableSpriteReplacer Init(bool) public void Init(bool isBlack) Parameters isBlack bool SetDeckSize(int) public void SetDeckSize(int n) Parameters n int SetMode(PuzzleZoneMode, TurnInfo) public void SetMode(PuzzleZoneMode mode, TurnInfo turnInfo) Parameters mode PuzzleZoneMode turnInfo TurnInfo"
  },
  "api/ProjectL.GameScene.PuzzleZone.IPuzzleZoneCard.html": {
    "href": "api/ProjectL.GameScene.PuzzleZone.IPuzzleZoneCard.html",
    "title": "Interface IPuzzleZoneCard | Project L Unity",
    "summary": "Interface IPuzzleZoneCard Namespace ProjectL.GameScene.PuzzleZone Assembly Assembly-CSharp.dll public interface IPuzzleZoneCard Methods GetDisposableCardDimmer() PuzzleZoneManager.DisposableSpriteReplacer GetDisposableCardDimmer() Returns PuzzleZoneManager.DisposableSpriteReplacer GetDisposableCardHighlighter() PuzzleZoneManager.DisposableSpriteReplacer GetDisposableCardHighlighter() Returns PuzzleZoneManager.DisposableSpriteReplacer Init(bool) void Init(bool isBlack) Parameters isBlack bool SetMode(PuzzleZoneMode, TurnInfo) void SetMode(PuzzleZoneMode mode, TurnInfo turnInfo) Parameters mode PuzzleZoneMode turnInfo TurnInfo"
  },
  "api/ProjectL.GameScene.PuzzleZone.PuzzleCard.html": {
    "href": "api/ProjectL.GameScene.PuzzleZone.PuzzleCard.html",
    "title": "Class PuzzleCard | Project L Unity",
    "summary": "Class PuzzleCard Namespace ProjectL.GameScene.PuzzleZone Assembly Assembly-CSharp.dll public class PuzzleCard : MonoBehaviour, IPuzzleZoneCard Inheritance object Object Component Behaviour MonoBehaviour PuzzleCard Implements IPuzzleZoneCard Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties PuzzleId public uint? PuzzleId { get; } Property Value uint? Methods GetDisposableCardDimmer() public PuzzleZoneManager.DisposableSpriteReplacer GetDisposableCardDimmer() Returns PuzzleZoneManager.DisposableSpriteReplacer GetDisposableCardHighlighter() public PuzzleZoneManager.DisposableSpriteReplacer GetDisposableCardHighlighter() Returns PuzzleZoneManager.DisposableSpriteReplacer Init(bool) public void Init(bool isBlack) Parameters isBlack bool RemoveFromRecycle() public void RemoveFromRecycle() SetMode(PuzzleZoneMode, TurnInfo) public void SetMode(PuzzleZoneMode mode, TurnInfo turnInfo) Parameters mode PuzzleZoneMode turnInfo TurnInfo SetPuzzle(Puzzle?) public void SetPuzzle(Puzzle? puzzle) Parameters puzzle Puzzle"
  },
  "api/ProjectL.GameScene.PuzzleZone.PuzzleZoneManager.DisposableSpriteReplacer.html": {
    "href": "api/ProjectL.GameScene.PuzzleZone.PuzzleZoneManager.DisposableSpriteReplacer.html",
    "title": "Class PuzzleZoneManager.DisposableSpriteReplacer | Project L Unity",
    "summary": "Class PuzzleZoneManager.DisposableSpriteReplacer Namespace ProjectL.GameScene.PuzzleZone Assembly Assembly-CSharp.dll public class PuzzleZoneManager.DisposableSpriteReplacer : IDisposable Inheritance object PuzzleZoneManager.DisposableSpriteReplacer Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DisposableSpriteReplacer(Button, Sprite?) public DisposableSpriteReplacer(Button button, Sprite? tempSprite) Parameters button Button tempSprite Sprite Methods Dispose() public void Dispose()"
  },
  "api/ProjectL.GameScene.PuzzleZone.PuzzleZoneManager.TemporarySpriteReplacer.html": {
    "href": "api/ProjectL.GameScene.PuzzleZone.PuzzleZoneManager.TemporarySpriteReplacer.html",
    "title": "Class PuzzleZoneManager.TemporarySpriteReplacer | Project L Unity",
    "summary": "Class PuzzleZoneManager.TemporarySpriteReplacer Namespace ProjectL.GameScene.PuzzleZone Assembly Assembly-CSharp.dll public class PuzzleZoneManager.TemporarySpriteReplacer : IDisposable Inheritance object PuzzleZoneManager.TemporarySpriteReplacer Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TemporarySpriteReplacer(Button, Sprite?) public TemporarySpriteReplacer(Button button, Sprite? tempSprite) Parameters button Button tempSprite Sprite Methods Dispose() public void Dispose()"
  },
  "api/ProjectL.GameScene.PuzzleZone.PuzzleZoneManager.html": {
    "href": "api/ProjectL.GameScene.PuzzleZone.PuzzleZoneManager.html",
    "title": "Class PuzzleZoneManager | Project L Unity",
    "summary": "Class PuzzleZoneManager Namespace ProjectL.GameScene.PuzzleZone Assembly Assembly-CSharp.dll public class PuzzleZoneManager : GraphicsManager<PuzzleZoneManager>, GameGraphicsSystem.IGraphicsManager, ICurrentTurnListener, IGameStatePuzzleListener, IActionCreationController, IHumanPlayerActionCreator<TakePuzzleAction>, IHumanPlayerActionCreator<RecycleAction>, IAIPlayerActionAnimator<TakePuzzleAction>, IAIPlayerActionAnimator<RecycleAction> Inheritance object Object Component Behaviour MonoBehaviour StaticInstance<PuzzleZoneManager> GraphicsManager<PuzzleZoneManager> PuzzleZoneManager Implements GameGraphicsSystem.IGraphicsManager ICurrentTurnListener IGameStatePuzzleListener IActionCreationController IHumanPlayerActionCreator<TakePuzzleAction> IHumanPlayerActionCreator<RecycleAction> IAIPlayerActionAnimator<TakePuzzleAction> IAIPlayerActionAnimator<RecycleAction> Inherited Members GraphicsManager<PuzzleZoneManager>.Awake() GraphicsManager<PuzzleZoneManager>.Start() StaticInstance<PuzzleZoneManager>.Instance StaticInstance<PuzzleZoneManager>.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods AddToRadioButtonGroup(Button, Action?, Action?) public static void AddToRadioButtonGroup(Button button, Action? onSelect, Action? onCancel) Parameters button Button onSelect Action onCancel Action Init(GameCore) public override void Init(GameCore game) Parameters game GameCore RemoveFromRadioButtonGroup(Button) public static void RemoveFromRadioButtonGroup(Button button) Parameters button Button ReportRecycleChange(RecycleActionModification) public void ReportRecycleChange(RecycleActionModification change) Parameters change RecycleActionModification ReportTakePuzzleChange(TakePuzzleActionModification) public void ReportTakePuzzleChange(TakePuzzleActionModification change) Parameters change TakePuzzleActionModification"
  },
  "api/ProjectL.GameScene.PuzzleZone.PuzzleZoneMode.html": {
    "href": "api/ProjectL.GameScene.PuzzleZone.PuzzleZoneMode.html",
    "title": "Enum PuzzleZoneMode | Project L Unity",
    "summary": "Enum PuzzleZoneMode Namespace ProjectL.GameScene.PuzzleZone Assembly Assembly-CSharp.dll public enum PuzzleZoneMode Fields Disabled = 0 ReadyToTakePuzzle = 1 Recycle = 3 TakePuzzle = 2"
  },
  "api/ProjectL.GameScene.PuzzleZone.PuzzlesColumn.DisposableColumnDimmer.html": {
    "href": "api/ProjectL.GameScene.PuzzleZone.PuzzlesColumn.DisposableColumnDimmer.html",
    "title": "Class PuzzlesColumn.DisposableColumnDimmer | Project L Unity",
    "summary": "Class PuzzlesColumn.DisposableColumnDimmer Namespace ProjectL.GameScene.PuzzleZone Assembly Assembly-CSharp.dll public class PuzzlesColumn.DisposableColumnDimmer : IDisposable Inheritance object PuzzlesColumn.DisposableColumnDimmer Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DisposableColumnDimmer(PuzzlesColumn, bool) public DisposableColumnDimmer(PuzzlesColumn column, bool shouldDimCoverCard) Parameters column PuzzlesColumn shouldDimCoverCard bool Methods Dispose() public void Dispose()"
  },
  "api/ProjectL.GameScene.PuzzleZone.PuzzlesColumn.DisposablePuzzleHighlighter.html": {
    "href": "api/ProjectL.GameScene.PuzzleZone.PuzzlesColumn.DisposablePuzzleHighlighter.html",
    "title": "Class PuzzlesColumn.DisposablePuzzleHighlighter | Project L Unity",
    "summary": "Class PuzzlesColumn.DisposablePuzzleHighlighter Namespace ProjectL.GameScene.PuzzleZone Assembly Assembly-CSharp.dll public class PuzzlesColumn.DisposablePuzzleHighlighter : IDisposable Inheritance object PuzzlesColumn.DisposablePuzzleHighlighter Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DisposablePuzzleHighlighter(PuzzlesColumn, List<uint>) public DisposablePuzzleHighlighter(PuzzlesColumn column, List<uint> puzzleIds) Parameters column PuzzlesColumn puzzleIds List<uint> Methods Dispose() public void Dispose()"
  },
  "api/ProjectL.GameScene.PuzzleZone.PuzzlesColumn.TemporaryColumnDimmer.html": {
    "href": "api/ProjectL.GameScene.PuzzleZone.PuzzlesColumn.TemporaryColumnDimmer.html",
    "title": "Class PuzzlesColumn.TemporaryColumnDimmer | Project L Unity",
    "summary": "Class PuzzlesColumn.TemporaryColumnDimmer Namespace ProjectL.GameScene.PuzzleZone Assembly Assembly-CSharp.dll public class PuzzlesColumn.TemporaryColumnDimmer : IDisposable Inheritance object PuzzlesColumn.TemporaryColumnDimmer Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TemporaryColumnDimmer(PuzzlesColumn, bool) public TemporaryColumnDimmer(PuzzlesColumn column, bool shouldDimCoverCard) Parameters column PuzzlesColumn shouldDimCoverCard bool Methods Dispose() public void Dispose()"
  },
  "api/ProjectL.GameScene.PuzzleZone.PuzzlesColumn.TemporaryPuzzleHighlighter.html": {
    "href": "api/ProjectL.GameScene.PuzzleZone.PuzzlesColumn.TemporaryPuzzleHighlighter.html",
    "title": "Class PuzzlesColumn.TemporaryPuzzleHighlighter | Project L Unity",
    "summary": "Class PuzzlesColumn.TemporaryPuzzleHighlighter Namespace ProjectL.GameScene.PuzzleZone Assembly Assembly-CSharp.dll public class PuzzlesColumn.TemporaryPuzzleHighlighter : IDisposable Inheritance object PuzzlesColumn.TemporaryPuzzleHighlighter Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TemporaryPuzzleHighlighter(PuzzlesColumn, List<uint>) public TemporaryPuzzleHighlighter(PuzzlesColumn column, List<uint> puzzleIds) Parameters column PuzzlesColumn puzzleIds List<uint> Methods Dispose() public void Dispose()"
  },
  "api/ProjectL.GameScene.PuzzleZone.PuzzlesColumn.html": {
    "href": "api/ProjectL.GameScene.PuzzleZone.PuzzlesColumn.html",
    "title": "Class PuzzlesColumn | Project L Unity",
    "summary": "Class PuzzlesColumn Namespace ProjectL.GameScene.PuzzleZone Assembly Assembly-CSharp.dll public class PuzzlesColumn : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour PuzzlesColumn Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties DeckCard public DeckCoverCard DeckCard { get; } Property Value DeckCoverCard this[int] public PuzzleCard? this[int index] { get; } Parameters index int Property Value PuzzleCard Methods GetDisposableColumnDimmer(bool) public PuzzlesColumn.DisposableColumnDimmer GetDisposableColumnDimmer(bool shouldDimCoverCard = true) Parameters shouldDimCoverCard bool Returns PuzzlesColumn.DisposableColumnDimmer GetDisposablePuzzleHighlighter(List<uint>) public PuzzlesColumn.DisposablePuzzleHighlighter GetDisposablePuzzleHighlighter(List<uint> puzzleIds) Parameters puzzleIds List<uint> Returns PuzzlesColumn.DisposablePuzzleHighlighter Init(bool) public void Init(bool isBlack) Parameters isBlack bool RemoveFromRecycle() public void RemoveFromRecycle() SetMode(PuzzleZoneMode, TurnInfo) public void SetMode(PuzzleZoneMode mode, TurnInfo turnInfo) Parameters mode PuzzleZoneMode turnInfo TurnInfo TryGetPuzzleCardWithId(uint, out PuzzleCard?) public bool TryGetPuzzleCardWithId(uint puzzleId, out PuzzleCard? puzzleCard) Parameters puzzleId uint puzzleCard PuzzleCard Returns bool"
  },
  "api/ProjectL.GameScene.PuzzleZone.html": {
    "href": "api/ProjectL.GameScene.PuzzleZone.html",
    "title": "Namespace ProjectL.GameScene.PuzzleZone | Project L Unity",
    "summary": "Namespace ProjectL.GameScene.PuzzleZone Classes DeckCoverCard PuzzleCard PuzzleZoneManager PuzzleZoneManager.DisposableSpriteReplacer PuzzlesColumn PuzzlesColumn.DisposableColumnDimmer PuzzlesColumn.DisposablePuzzleHighlighter Interfaces IPuzzleZoneCard Enums PuzzleZoneMode"
  },
  "api/ProjectL.GameScene.html": {
    "href": "api/ProjectL.GameScene.html",
    "title": "Namespace ProjectL.GameScene | Project L Unity",
    "summary": "Namespace ProjectL.GameScene Classes GraphicsManager<TSelf>"
  },
  "api/ProjectL.InputActions.GameControls.GameplayActions.html": {
    "href": "api/ProjectL.InputActions.GameControls.GameplayActions.html",
    "title": "Struct GameControls.GameplayActions | Project L Unity",
    "summary": "Struct GameControls.GameplayActions Namespace ProjectL.InputActions Assembly Assembly-CSharp.dll Provides access to input actions defined in input action map \"Gameplay\". public struct GameControls.GameplayActions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors GameplayActions(GameControls) Construct a new instance of the input action map wrapper class. public GameplayActions(GameControls wrapper) Parameters wrapper GameControls Properties CancelAction Provides access to the underlying input action \"Gameplay/CancelAction\". public InputAction CancelAction { get; } Property Value InputAction ClickPlace Provides access to the underlying input action \"Gameplay/ClickPlace\". public InputAction ClickPlace { get; } Property Value InputAction ConfirmAction Provides access to the underlying input action \"Gameplay/ConfirmAction\". public InputAction ConfirmAction { get; } Property Value InputAction Flip Provides access to the underlying input action \"Gameplay/Flip\". public InputAction Flip { get; } Property Value InputAction KeyboardPlace Provides access to the underlying input action \"Gameplay/KeyboardPlace\". public InputAction KeyboardPlace { get; } Property Value InputAction PauseGame Provides access to the underlying input action \"Gameplay/PauseGame\". public InputAction PauseGame { get; } Property Value InputAction Rotate90 Provides access to the underlying input action \"Gameplay/Rotate90\". public InputAction Rotate90 { get; } Property Value InputAction RotateSmooth Provides access to the underlying input action \"Gameplay/RotateSmooth\". public InputAction RotateSmooth { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods AddCallbacks(IGameplayActions) Adds UnityEngine.InputSystem.InputAction.started, UnityEngine.InputSystem.InputAction.performed and UnityEngine.InputSystem.InputAction.canceled callbacks provided via on all input actions contained in this map. public void AddCallbacks(GameControls.IGameplayActions instance) Parameters instance GameControls.IGameplayActions Callback instance. Remarks If instance is null or instance have already been added this method does nothing. See Also GameControls.GameplayActions Disable() public void Disable() Enable() public void Enable() Get() Provides access to the underlying input action map instance. public InputActionMap Get() Returns InputActionMap RemoveCallbacks(IGameplayActions) Unregisters and unregisters all input action callbacks via UnregisterCallbacks(IGameplayActions). public void RemoveCallbacks(GameControls.IGameplayActions instance) Parameters instance GameControls.IGameplayActions See Also UnregisterCallbacks(IGameplayActions) SetCallbacks(IGameplayActions) Replaces all existing callback instances and previously registered input action callbacks associated with them with callbacks provided via . public void SetCallbacks(GameControls.IGameplayActions instance) Parameters instance GameControls.IGameplayActions Remarks If instance is null, calling this method will only unregister all existing callbacks but not register any new callbacks. See Also AddCallbacks(IGameplayActions) RemoveCallbacks(IGameplayActions) UnregisterCallbacks(IGameplayActions) Operators implicit operator InputActionMap(GameplayActions) Implicitly converts an to an instance. public static implicit operator InputActionMap(GameControls.GameplayActions set) Parameters set GameControls.GameplayActions Returns InputActionMap"
  },
  "api/ProjectL.InputActions.GameControls.IGameplayActions.html": {
    "href": "api/ProjectL.InputActions.GameControls.IGameplayActions.html",
    "title": "Interface GameControls.IGameplayActions | Project L Unity",
    "summary": "Interface GameControls.IGameplayActions Namespace ProjectL.InputActions Assembly Assembly-CSharp.dll Interface to implement callback methods for all input action callbacks associated with input actions defined by \"Gameplay\" which allows adding and removing callbacks. public interface GameControls.IGameplayActions Methods OnCancelAction(CallbackContext) Method invoked when associated input action \"CancelAction\" is either UnityEngine.InputSystem.InputAction.started, UnityEngine.InputSystem.InputAction.performed or UnityEngine.InputSystem.InputAction.canceled. void OnCancelAction(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext See Also started performed canceled OnClickPlace(CallbackContext) Method invoked when associated input action \"ClickPlace\" is either UnityEngine.InputSystem.InputAction.started, UnityEngine.InputSystem.InputAction.performed or UnityEngine.InputSystem.InputAction.canceled. void OnClickPlace(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext See Also started performed canceled OnConfirmAction(CallbackContext) Method invoked when associated input action \"ConfirmAction\" is either UnityEngine.InputSystem.InputAction.started, UnityEngine.InputSystem.InputAction.performed or UnityEngine.InputSystem.InputAction.canceled. void OnConfirmAction(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext See Also started performed canceled OnFlip(CallbackContext) Method invoked when associated input action \"Flip\" is either UnityEngine.InputSystem.InputAction.started, UnityEngine.InputSystem.InputAction.performed or UnityEngine.InputSystem.InputAction.canceled. void OnFlip(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext See Also started performed canceled OnKeyboardPlace(CallbackContext) Method invoked when associated input action \"KeyboardPlace\" is either UnityEngine.InputSystem.InputAction.started, UnityEngine.InputSystem.InputAction.performed or UnityEngine.InputSystem.InputAction.canceled. void OnKeyboardPlace(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext See Also started performed canceled OnPauseGame(CallbackContext) Method invoked when associated input action \"PauseGame\" is either UnityEngine.InputSystem.InputAction.started, UnityEngine.InputSystem.InputAction.performed or UnityEngine.InputSystem.InputAction.canceled. void OnPauseGame(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext See Also started performed canceled OnRotate90(CallbackContext) Method invoked when associated input action \"Rotate90\" is either UnityEngine.InputSystem.InputAction.started, UnityEngine.InputSystem.InputAction.performed or UnityEngine.InputSystem.InputAction.canceled. void OnRotate90(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext See Also started performed canceled OnRotateSmooth(CallbackContext) Method invoked when associated input action \"RotateSmooth\" is either UnityEngine.InputSystem.InputAction.started, UnityEngine.InputSystem.InputAction.performed or UnityEngine.InputSystem.InputAction.canceled. void OnRotateSmooth(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext See Also started performed canceled See Also AddCallbacks(IGameplayActions) RemoveCallbacks(IGameplayActions)"
  },
  "api/ProjectL.InputActions.GameControls.IUIActions.html": {
    "href": "api/ProjectL.InputActions.GameControls.IUIActions.html",
    "title": "Interface GameControls.IUIActions | Project L Unity",
    "summary": "Interface GameControls.IUIActions Namespace ProjectL.InputActions Assembly Assembly-CSharp.dll Interface to implement callback methods for all input action callbacks associated with input actions defined by \"UI\" which allows adding and removing callbacks. public interface GameControls.IUIActions Methods OnResumeGame(CallbackContext) Method invoked when associated input action \"ResumeGame\" is either UnityEngine.InputSystem.InputAction.started, UnityEngine.InputSystem.InputAction.performed or UnityEngine.InputSystem.InputAction.canceled. void OnResumeGame(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext See Also started performed canceled See Also AddCallbacks(IUIActions) RemoveCallbacks(IUIActions)"
  },
  "api/ProjectL.InputActions.GameControls.UIActions.html": {
    "href": "api/ProjectL.InputActions.GameControls.UIActions.html",
    "title": "Struct GameControls.UIActions | Project L Unity",
    "summary": "Struct GameControls.UIActions Namespace ProjectL.InputActions Assembly Assembly-CSharp.dll Provides access to input actions defined in input action map \"UI\". public struct GameControls.UIActions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors UIActions(GameControls) Construct a new instance of the input action map wrapper class. public UIActions(GameControls wrapper) Parameters wrapper GameControls Properties ResumeGame Provides access to the underlying input action \"UI/ResumeGame\". public InputAction ResumeGame { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods AddCallbacks(IUIActions) Adds UnityEngine.InputSystem.InputAction.started, UnityEngine.InputSystem.InputAction.performed and UnityEngine.InputSystem.InputAction.canceled callbacks provided via on all input actions contained in this map. public void AddCallbacks(GameControls.IUIActions instance) Parameters instance GameControls.IUIActions Callback instance. Remarks If instance is null or instance have already been added this method does nothing. See Also GameControls.UIActions Disable() public void Disable() Enable() public void Enable() Get() Provides access to the underlying input action map instance. public InputActionMap Get() Returns InputActionMap RemoveCallbacks(IUIActions) Unregisters and unregisters all input action callbacks via UnregisterCallbacks(IUIActions). public void RemoveCallbacks(GameControls.IUIActions instance) Parameters instance GameControls.IUIActions See Also UnregisterCallbacks(IUIActions) SetCallbacks(IUIActions) Replaces all existing callback instances and previously registered input action callbacks associated with them with callbacks provided via . public void SetCallbacks(GameControls.IUIActions instance) Parameters instance GameControls.IUIActions Remarks If instance is null, calling this method will only unregister all existing callbacks but not register any new callbacks. See Also AddCallbacks(IUIActions) RemoveCallbacks(IUIActions) UnregisterCallbacks(IUIActions) Operators implicit operator InputActionMap(UIActions) Implicitly converts an to an instance. public static implicit operator InputActionMap(GameControls.UIActions set) Parameters set GameControls.UIActions Returns InputActionMap"
  },
  "api/ProjectL.InputActions.GameControls.html": {
    "href": "api/ProjectL.InputActions.GameControls.html",
    "title": "Class GameControls | Project L Unity",
    "summary": "Class GameControls Namespace ProjectL.InputActions Assembly Assembly-CSharp.dll Provides programmatic access to UnityEngine.InputSystem.InputActionAsset, UnityEngine.InputSystem.InputActionMap, UnityEngine.InputSystem.InputAction and UnityEngine.InputSystem.InputControlScheme instances defined in asset \"Assets/InputActions/GameControls.inputactions\". public class GameControls : IInputActionCollection2, IInputActionCollection, IEnumerable<InputAction>, IEnumerable, IDisposable Inheritance object GameControls Implements IInputActionCollection2 IInputActionCollection IEnumerable<InputAction> IEnumerable IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Examples using namespace UnityEngine; using UnityEngine.InputSystem; // Example of using an InputActionMap named \"Player\" from a UnityEngine.MonoBehaviour implementing callback interface. public class Example : MonoBehaviour, MyActions.IPlayerActions { private MyActions_Actions m_Actions; // Source code representation of asset. private MyActions_Actions.PlayerActions m_Player; // Source code representation of action map. void Awake() { m_Actions = new MyActions_Actions(); // Create asset object. m_Player = m_Actions.Player; // Extract action map object. m_Player.AddCallbacks(this); // Register callback interface IPlayerActions. } void OnDestroy() { m_Actions.Dispose(); // Destroy asset object. } void OnEnable() { m_Player.Enable(); // Enable all actions within map. } void OnDisable() { m_Player.Disable(); // Disable all actions within map. } #region Interface implementation of MyActions.IPlayerActions // Invoked when \"Move\" action is either started, performed or canceled. public void OnMove(InputAction.CallbackContext context) { Debug.Log($\"OnMove: {context.ReadValue<Vector2>()}\"); } // Invoked when \"Attack\" action is either started, performed or canceled. public void OnAttack(InputAction.CallbackContext context) { Debug.Log($\"OnAttack: {context.ReadValue<float>()}\"); } #endregion } Remarks This class is source generated and any manual edits will be discarded if the associated asset is reimported or modified. Constructors GameControls() Constructs a new instance. public GameControls() Properties Gameplay Provides a new GameControls.GameplayActions instance referencing this action map. public GameControls.GameplayActions Gameplay { get; } Property Value GameControls.GameplayActions UI Provides a new GameControls.UIActions instance referencing this action map. public GameControls.UIActions UI { get; } Property Value GameControls.UIActions asset Provides access to the underlying asset instance. public InputActionAsset asset { get; } Property Value InputActionAsset bindingMask public InputBinding? bindingMask { get; set; } Property Value InputBinding? bindings public IEnumerable<InputBinding> bindings { get; } Property Value IEnumerable<InputBinding> controlSchemes public ReadOnlyArray<InputControlScheme> controlSchemes { get; } Property Value ReadOnlyArray<InputControlScheme> devices public ReadOnlyArray<InputDevice>? devices { get; set; } Property Value ReadOnlyArray<InputDevice>? Methods Contains(InputAction) public bool Contains(InputAction action) Parameters action InputAction Returns bool Disable() public void Disable() Dispose() Destroys this asset and all associated UnityEngine.InputSystem.InputAction instances. public void Dispose() Enable() public void Enable() ~GameControls() protected ~GameControls() FindAction(string, bool) public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false) Parameters actionNameOrId string throwIfNotFound bool Returns InputAction FindBinding(InputBinding, out InputAction) public int FindBinding(InputBinding bindingMask, out InputAction action) Parameters bindingMask InputBinding action InputAction Returns int GetEnumerator() public IEnumerator<InputAction> GetEnumerator() Returns IEnumerator<InputAction>"
  },
  "api/ProjectL.InputActions.html": {
    "href": "api/ProjectL.InputActions.html",
    "title": "Namespace ProjectL.InputActions | Project L Unity",
    "summary": "Namespace ProjectL.InputActions Classes GameControls Provides programmatic access to UnityEngine.InputSystem.InputActionAsset, UnityEngine.InputSystem.InputActionMap, UnityEngine.InputSystem.InputAction and UnityEngine.InputSystem.InputControlScheme instances defined in asset \"Assets/InputActions/GameControls.inputactions\". Structs GameControls.GameplayActions Provides access to input actions defined in input action map \"Gameplay\". GameControls.UIActions Provides access to input actions defined in input action map \"UI\". Interfaces GameControls.IGameplayActions Interface to implement callback methods for all input action callbacks associated with input actions defined by \"Gameplay\" which allows adding and removing callbacks. GameControls.IUIActions Interface to implement callback methods for all input action callbacks associated with input actions defined by \"UI\" which allows adding and removing callbacks."
  },
  "api/ProjectL.MainMenuScene.MainMenuManager.html": {
    "href": "api/ProjectL.MainMenuScene.MainMenuManager.html",
    "title": "Class MainMenuManager | Project L Unity",
    "summary": "Class MainMenuManager Namespace ProjectL.MainMenuScene Assembly Assembly-CSharp.dll Manages the Main Menu scene. public class MainMenuManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MainMenuManager Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods OnNewGameButtonClick() Handles the click event for the \"Play\" button. Loads the player selection scene. public void OnNewGameButtonClick() OnQuitButtonClick() Handles the click event for the \"Quit\" button. Quits the application. public void OnQuitButtonClick() OnUserGuideButtonClick() Handles the click event for the \"User Guide\" button. Opens the User Guide in the default web browser. public void OnUserGuideButtonClick() PlayButtonClickSound() Plays a button click sound using the SoundManager. public void PlayButtonClickSound()"
  },
  "api/ProjectL.MainMenuScene.html": {
    "href": "api/ProjectL.MainMenuScene.html",
    "title": "Namespace ProjectL.MainMenuScene | Project L Unity",
    "summary": "Namespace ProjectL.MainMenuScene Classes MainMenuManager Manages the Main Menu scene."
  },
  "api/ProjectL.Management.FullscreenToggler.html": {
    "href": "api/ProjectL.Management.FullscreenToggler.html",
    "title": "Class FullscreenToggler | Project L Unity",
    "summary": "Class FullscreenToggler Namespace ProjectL.Management Assembly Assembly-CSharp.dll A class that toggles full-screen mode in Unity when F11 is pressed. public class FullscreenToggler : StaticInstance<FullscreenToggler> Inheritance object Object Component Behaviour MonoBehaviour StaticInstance<FullscreenToggler> FullscreenToggler Inherited Members StaticInstance<FullscreenToggler>.Instance StaticInstance<FullscreenToggler>.Awake() StaticInstance<FullscreenToggler>.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) See Also StaticInstance<T>"
  },
  "api/ProjectL.Management.GameManager.html": {
    "href": "api/ProjectL.Management.GameManager.html",
    "title": "Class GameManager | Project L Unity",
    "summary": "Class GameManager Namespace ProjectL.Management Assembly Assembly-CSharp.dll Core singleton managing game state (pause/resume), player input via GameControls, the in-game logger, and scene-specific configurations. public class GameManager : Singleton<GameManager> Inheritance object Object Component Behaviour MonoBehaviour StaticInstance<GameManager> Singleton<GameManager> GameManager Inherited Members StaticInstance<GameManager>.Instance StaticInstance<GameManager>.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Remarks Responsibilities include: Implementing game pause/resume logic, toggling relevant input action maps. Providing static access to the GameControls instance. Managing visibility and clearing of the in-game Logger. Adjusting pause capabilities and logger visibility based on the currently loaded scene. Properties CanGameBePaused true if the game can be paused; otherwise, false. public static bool CanGameBePaused { get; set; } Property Value bool Controls The singleton instance of the GameControls class. Can be used to connect to player input actions public static GameControls? Controls { get; } Property Value GameControls IsGamePaused true if the game is currently paused; otherwise, false. public static bool IsGamePaused { get; } Property Value bool Methods Awake() Called when the script instance is being loaded. Ensures that only one instance exists and destroys any duplicate objects. protected override void Awake() OpenLogger() Opens the in-game logger if it is not already open. public void OpenLogger() ResumeGame() Resumes the game if it is currently paused. Hides the pause menu and re-enables gameplay controls. public void ResumeGame() See Also Singleton<T>"
  },
  "api/ProjectL.Management.SceneLoader.html": {
    "href": "api/ProjectL.Management.SceneLoader.html",
    "title": "Class SceneLoader | Project L Unity",
    "summary": "Class SceneLoader Namespace ProjectL.Management Assembly Assembly-CSharp.dll Manages the SceneLoader prefab. Provides functionality for transitioning between different scenes. public class SceneLoader : Singleton<SceneLoader> Inheritance object Object Component Behaviour MonoBehaviour StaticInstance<SceneLoader> Singleton<SceneLoader> SceneLoader Inherited Members StaticInstance<SceneLoader>.Instance StaticInstance<SceneLoader>.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields FinalResultsScene public const string FinalResultsScene = \"4-FinalResults\" Field Value string GameScene public const string GameScene = \"3-Game\" Field Value string MainMenuScene public const string MainMenuScene = \"1-MainMenu\" Field Value string PlayerSelectionScene public const string PlayerSelectionScene = \"2-PlayerSelection\" Field Value string Methods Awake() Called when the script instance is being loaded. Ensures that only one instance exists and destroys any duplicate objects. protected override void Awake() LoadFinalResultsAsync() Loads the final results scene. public void LoadFinalResultsAsync() LoadGameAsync() Loads the game scene with. public void LoadGameAsync() LoadMainMenuAsync() Loads the main menu scene. Also disables the logger if it exists. public void LoadMainMenuAsync() LoadPlayerSelectionAsync() Loads the player selection scene. Also clears the logger. public void LoadPlayerSelectionAsync()"
  },
  "api/ProjectL.Management.Systems.html": {
    "href": "api/ProjectL.Management.Systems.html",
    "title": "Class Systems | Project L Unity",
    "summary": "Class Systems Namespace ProjectL.Management Assembly Assembly-CSharp.dll The only persistent singleton in the game. This class is used to prevent the Systems prefab from being destroyed when loading a new scene. public class Systems : PersistentSingleton<Systems> Inheritance object Object Component Behaviour MonoBehaviour StaticInstance<Systems> Singleton<Systems> PersistentSingleton<Systems> Systems Inherited Members PersistentSingleton<Systems>.Awake() StaticInstance<Systems>.Instance StaticInstance<Systems>.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) See Also PersistentSingleton<T>"
  },
  "api/ProjectL.Management.html": {
    "href": "api/ProjectL.Management.html",
    "title": "Namespace ProjectL.Management | Project L Unity",
    "summary": "Namespace ProjectL.Management Classes FullscreenToggler A class that toggles full-screen mode in Unity when F11 is pressed. GameManager Core singleton managing game state (pause/resume), player input via GameControls, the in-game logger, and scene-specific configurations. SceneLoader Manages the SceneLoader prefab. Provides functionality for transitioning between different scenes. Systems The only persistent singleton in the game. This class is used to prevent the Systems prefab from being destroyed when loading a new scene."
  },
  "api/ProjectL.Pause.PauseMenu.html": {
    "href": "api/ProjectL.Pause.PauseMenu.html",
    "title": "Class PauseMenu | Project L Unity",
    "summary": "Class PauseMenu Namespace ProjectL.Pause Assembly Assembly-CSharp.dll Manages the PauseMenu prefab. public class PauseMenu : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour PauseMenu Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods Hide() Hides the pause menu. public void Hide() OnAnimationSpeedSliderValueChanged(float) Handles the value change event for the animation speed slider. Stores the new value in PlayerPrefs and updates the displayed value. Values on the slider range from ProjectL.Pause.PauseMenu._animationSliderMinValue (10) to ProjectL.Pause.PauseMenu._animationSliderMaxValue (40), which is then converted to a speed factor of 1.0 to 4.0. public void OnAnimationSpeedSliderValueChanged(float value) Parameters value float The value. OnHomeButtonClick() Handles the click event for the \"Home\" button. Transitions to the main menu scene. public void OnHomeButtonClick() OnResumeButtonClick() Handles the click event for the \"Back\" button. Resumes the game. public void OnResumeButtonClick() OnScoreToggleClick(bool) Handles the click event for the \"Score\" checkbox. Toggles the visibility of the score labels. public void OnScoreToggleClick(bool showScore) Parameters showScore bool true to show the score labels; otherwise, false. Show() Shows the pause menu. public void Show()"
  },
  "api/ProjectL.Pause.html": {
    "href": "api/ProjectL.Pause.html",
    "title": "Namespace ProjectL.Pause | Project L Unity",
    "summary": "Namespace ProjectL.Pause Classes PauseMenu Manages the PauseMenu prefab."
  },
  "api/ProjectL.PersistentSingleton-1.html": {
    "href": "api/ProjectL.PersistentSingleton-1.html",
    "title": "Class PersistentSingleton<T> | Project L Unity",
    "summary": "Class PersistentSingleton<T> Namespace ProjectL Assembly Assembly-CSharp.dll A class for creating persistent singleton instances of MonoBehaviour-derived classes. Ensures that the instance persists across scene loads. public class PersistentSingleton<T> : Singleton<T> where T : MonoBehaviour Type Parameters T The type of the MonoBehaviour-derived class. Inheritance object Object Component Behaviour MonoBehaviour StaticInstance<T> Singleton<T> PersistentSingleton<T> Derived Systems Inherited Members StaticInstance<T>.Instance StaticInstance<T>.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods Awake() Called when the script instance is being loaded. Ensures that the instance persists across scene loads if it is the current instance. protected override void Awake()"
  },
  "api/ProjectL.PlayerSelectionScene.InputFieldTabNavigator.html": {
    "href": "api/ProjectL.PlayerSelectionScene.InputFieldTabNavigator.html",
    "title": "Class InputFieldTabNavigator | Project L Unity",
    "summary": "Class InputFieldTabNavigator Namespace ProjectL.PlayerSelectionScene Assembly Assembly-CSharp.dll Implements the TAB-navigation logic for TMPro.TMP_InputFields. public class InputFieldTabNavigator : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour InputFieldTabNavigator Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object)"
  },
  "api/ProjectL.PlayerSelectionScene.PlayerSelectionManager.html": {
    "href": "api/ProjectL.PlayerSelectionScene.PlayerSelectionManager.html",
    "title": "Class PlayerSelectionManager | Project L Unity",
    "summary": "Class PlayerSelectionManager Namespace ProjectL.PlayerSelectionScene Assembly Assembly-CSharp.dll Manages the Player Selection scene. public class PlayerSelectionManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour PlayerSelectionManager Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods OnBackButtonClick() Handles the back button click event. Loads the main menu scene. public void OnBackButtonClick() OnNumPiecesSliderValueChanged(float) Handles the value changed event for the \"Number of pieces in reserve\" slider. public void OnNumPiecesSliderValueChanged(float value) Parameters value float OnShuffleCheckboxValueChanged(bool) Handles the value changed event for the \"Shuffle players\" checkbox. public void OnShuffleCheckboxValueChanged(bool toggled) Parameters toggled bool true to shuffle players; otherwise, false. OnStartGameButtonClick() Handles the \"Start Game\" button click event. Starts the game if the player selection is valid. Otherwise shows an error message. public void OnStartGameButtonClick()"
  },
  "api/ProjectL.PlayerSelectionScene.PlayerSettingsRow.html": {
    "href": "api/ProjectL.PlayerSelectionScene.PlayerSettingsRow.html",
    "title": "Class PlayerSettingsRow | Project L Unity",
    "summary": "Class PlayerSettingsRow Namespace ProjectL.PlayerSelectionScene Assembly Assembly-CSharp.dll Manages the PlayerSelectionRow prefab. Represents one row in the Player Selection scene. public class PlayerSettingsRow : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour PlayerSettingsRow Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields NameCharacterLimit public const int NameCharacterLimit = 18 Field Value int Properties PlayerName Trimmed name of the player. public string PlayerName { get; } Property Value string PlayerType Information about the selected player type. public PlayerTypeInfo? PlayerType { get; } Property Value PlayerTypeInfo? Methods Init(string?, PlayerTypeInfo?) public void Init(string? playerName, PlayerTypeInfo? playerType) Parameters playerName string playerType PlayerTypeInfo? IsEmpty() Checks if the current selection is empty. public bool IsEmpty() Returns bool true if the selection is empty; otherwise, false. IsValid() Validates the current selection. public bool IsValid() Returns bool true if the selection is valid; otherwise, false. OnDropdownCancel() Handles the dropdown cancel event. public void OnDropdownCancel() OnDropdownClick() Handles the dropdown click event. public void OnDropdownClick() OnDropdownDeselect() Handles the dropdown deselect event. public void OnDropdownDeselect() OnDropdownEnter() Handles the dropdown enter event. public void OnDropdownEnter() OnDropdownExit() Handles the dropdown exit event. public void OnDropdownExit() OnDropdownItemClick() Handles the dropdown item click event. public void OnDropdownItemClick() OnDropdownValueChanged(int) Handles the dropdown value change event. public void OnDropdownValueChanged(int index) Parameters index int The index of the selected dropdown option. OnInputFieldDeselect(string) Handles the input field deselect event. public void OnInputFieldDeselect(string value) Parameters value string The current value of the input field. OnInputFieldEndEdit(string) Handles the input field end edit event. public void OnInputFieldEndEdit(string value) Parameters value string The final value of the input field. OnInputFieldEnter() Handles the input field enter event. public void OnInputFieldEnter() OnInputFieldExit() Handles the input field exit event. public void OnInputFieldExit() OnInputFieldSelect(string) Handles the input field select event. public void OnInputFieldSelect(string value) Parameters value string The current value of the input field. OnInputFieldValueChanged(string) Handles the input field value change event. public void OnInputFieldValueChanged(string value) Parameters value string The new value of the input field. OnResetButtonClick() Handles the reset button click event. public void OnResetButtonClick()"
  },
  "api/ProjectL.PlayerSelectionScene.html": {
    "href": "api/ProjectL.PlayerSelectionScene.html",
    "title": "Namespace ProjectL.PlayerSelectionScene | Project L Unity",
    "summary": "Namespace ProjectL.PlayerSelectionScene Classes InputFieldTabNavigator Implements the TAB-navigation logic for TMPro.TMP_InputFields. PlayerSelectionManager Manages the Player Selection scene. PlayerSettingsRow Manages the PlayerSelectionRow prefab. Represents one row in the Player Selection scene."
  },
  "api/ProjectL.Singleton-1.html": {
    "href": "api/ProjectL.Singleton-1.html",
    "title": "Class Singleton<T> | Project L Unity",
    "summary": "Class Singleton<T> Namespace ProjectL Assembly Assembly-CSharp.dll A class for creating singleton instances of MonoBehaviour-derived classes. Ensures that only one instance exists and destroys duplicates. public class Singleton<T> : StaticInstance<T> where T : MonoBehaviour Type Parameters T The type of the MonoBehaviour-derived class. Inheritance object Object Component Behaviour MonoBehaviour StaticInstance<T> Singleton<T> Derived GameManager SceneLoader PersistentSingleton<T> SoundManager Inherited Members StaticInstance<T>.Instance StaticInstance<T>.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods Awake() Called when the script instance is being loaded. Ensures that only one instance exists and destroys any duplicate objects. protected override void Awake()"
  },
  "api/ProjectL.Sound.SoundManager.html": {
    "href": "api/ProjectL.Sound.SoundManager.html",
    "title": "Class SoundManager | Project L Unity",
    "summary": "Class SoundManager Namespace ProjectL.Sound Assembly Assembly-CSharp.dll Provides methods for playing sound effects in the game. public class SoundManager : Singleton<SoundManager> Inheritance object Object Component Behaviour MonoBehaviour StaticInstance<SoundManager> Singleton<SoundManager> SoundManager Inherited Members Singleton<SoundManager>.Awake() StaticInstance<SoundManager>.Instance StaticInstance<SoundManager>.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods PlayButtonClickSound() Plays the \"button click\" sound effect. public void PlayButtonClickSound() PlayErrorSound() Plays the \"error\" sound effect. public void PlayErrorSound() PlayInputLineSound() Plays the \"input line\" sound effect. public void PlayInputLineSound() PlaySliderSound() Plays the \"slider\" sound effect. public void PlaySliderSound() PlaySoftTapSoundEffect() Plays the \"soft tap\" sound effect. public void PlaySoftTapSoundEffect() PlayTapSoundEffect() Plays the \"tap\" sound effect. public void PlayTapSoundEffect()"
  },
  "api/ProjectL.Sound.SoundVolumeButton.html": {
    "href": "api/ProjectL.Sound.SoundVolumeButton.html",
    "title": "Class SoundVolumeButton | Project L Unity",
    "summary": "Class SoundVolumeButton Namespace ProjectL.Sound Assembly Assembly-CSharp.dll Manages the SoundControls prefab. Cycles through volume levels upon sound button click and updates its icon accordingly. [RequireComponent(typeof(Button))] [RequireComponent(typeof(Image))] public class SoundVolumeButton : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SoundVolumeButton Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods OnSoundButtonClick() Handles clicks on the sound volume button. public void OnSoundButtonClick()"
  },
  "api/ProjectL.Sound.html": {
    "href": "api/ProjectL.Sound.html",
    "title": "Namespace ProjectL.Sound | Project L Unity",
    "summary": "Namespace ProjectL.Sound Classes SoundManager Provides methods for playing sound effects in the game. SoundVolumeButton Manages the SoundControls prefab. Cycles through volume levels upon sound button click and updates its icon accordingly."
  },
  "api/ProjectL.StaticInstance-1.html": {
    "href": "api/ProjectL.StaticInstance-1.html",
    "title": "Class StaticInstance<T> | Project L Unity",
    "summary": "Class StaticInstance<T> Namespace ProjectL Assembly Assembly-CSharp.dll A base class for creating static instances of MonoBehaviour-derived classes. Ensures that only one instance of the class exists at a time. public class StaticInstance<T> : MonoBehaviour where T : MonoBehaviour Type Parameters T The type of the MonoBehaviour-derived class. Inheritance object Object Component Behaviour MonoBehaviour StaticInstance<T> Derived GraphicsManager<TSelf> GameGraphicsSystem PieceZoneManager TetrominoSizeManager FullscreenToggler Singleton<T> Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Instance Gets the static instance of the class. public static T Instance { get; } Property Value T Methods Awake() Called when the script instance is being loaded. Ensures that the instance is assigned to the current object. protected virtual void Awake() OnDestroy() Called when the MonoBehaviour will be destroyed. Resets the static instance if it matches the current object. protected virtual void OnDestroy()"
  },
  "api/ProjectL.Utils.AdaptColliderToRectTransform.html": {
    "href": "api/ProjectL.Utils.AdaptColliderToRectTransform.html",
    "title": "Class AdaptColliderToRectTransform | Project L Unity",
    "summary": "Class AdaptColliderToRectTransform Namespace ProjectL.Utils Assembly Assembly-CSharp.dll [ExecuteAlways] [RequireComponent(typeof(RectTransform))] [RequireComponent(typeof(BoxCollider2D))] public class AdaptColliderToRectTransform : UIBehaviour Inheritance object Object Component Behaviour MonoBehaviour UIBehaviour AdaptColliderToRectTransform Inherited Members UIBehaviour.Start() UIBehaviour.OnDisable() UIBehaviour.OnDestroy() UIBehaviour.IsActive() UIBehaviour.Reset() UIBehaviour.OnBeforeTransformParentChanged() UIBehaviour.OnTransformParentChanged() UIBehaviour.OnDidApplyAnimationProperties() UIBehaviour.OnCanvasGroupChanged() UIBehaviour.OnCanvasHierarchyChanged() UIBehaviour.IsDestroyed() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Component.rigidbody Component.rigidbody2D Component.camera Component.light Component.animation Component.constantForce Component.renderer Component.audio Component.networkView Component.collider Component.collider2D Component.hingeJoint Component.particleSystem Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods Awake() protected override void Awake() OnEnable() protected override void OnEnable() OnRectTransformDimensionsChange() protected override void OnRectTransformDimensionsChange() OnValidate() protected override void OnValidate() UpdateCollider() Updates the BoxCollider2D size and offset to match the RectTransform's world bounds. public void UpdateCollider()"
  },
  "api/ProjectL.Utils.RadioButtonsGroup.html": {
    "href": "api/ProjectL.Utils.RadioButtonsGroup.html",
    "title": "Class RadioButtonsGroup | Project L Unity",
    "summary": "Class RadioButtonsGroup Namespace ProjectL.Utils Assembly Assembly-CSharp.dll public static class RadioButtonsGroup Inheritance object RadioButtonsGroup Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DeleteGroup(string) public static void DeleteGroup(string groupName) Parameters groupName string ForceDeselectButton(Button) public static void ForceDeselectButton(Button button) Parameters button Button ForceDeselectButtonInGroup(string) public static void ForceDeselectButtonInGroup(string groupName) Parameters groupName string IsButtonSelected(Button) public static bool IsButtonSelected(Button button) Parameters button Button Returns bool RegisterButton(Button, string, Action?, Action?) public static void RegisterButton(Button button, string groupName, Action? onSelect = null, Action? onCancel = null) Parameters button Button groupName string onSelect Action onCancel Action TryGetSelectedButton(string, out Button?) public static bool TryGetSelectedButton(string groupName, out Button? result) Parameters groupName string result Button Returns bool UnregisterButton(Button) public static void UnregisterButton(Button button) Parameters button Button UpdateSpritesForButton(Button, SpriteState) public static void UpdateSpritesForButton(Button button, SpriteState newState) Parameters button Button newState SpriteState"
  },
  "api/ProjectL.Utils.html": {
    "href": "api/ProjectL.Utils.html",
    "title": "Namespace ProjectL.Utils | Project L Unity",
    "summary": "Namespace ProjectL.Utils Classes AdaptColliderToRectTransform RadioButtonsGroup"
  },
  "api/ProjectL.html": {
    "href": "api/ProjectL.html",
    "title": "Namespace ProjectL | Project L Unity",
    "summary": "Namespace ProjectL Classes PersistentSingleton<T> A class for creating persistent singleton instances of MonoBehaviour-derived classes. Ensures that the instance persists across scene loads. Singleton<T> A class for creating singleton instances of MonoBehaviour-derived classes. Ensures that only one instance exists and destroys duplicates. StaticInstance<T> A base class for creating static instances of MonoBehaviour-derived classes. Ensures that only one instance of the class exists at a time."
  },
  "api/ProjectLCore.GamePieces.ColorImage.Color.html": {
    "href": "api/ProjectLCore.GamePieces.ColorImage.Color.html",
    "title": "Struct ColorImage.Color | Project L Unity",
    "summary": "Struct ColorImage.Color Namespace ProjectLCore.GamePieces Assembly Assembly-CSharp.dll Represents a color. public struct ColorImage.Color : IEquatable<ColorImage.Color> Implements IEquatable<ColorImage.Color> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Color(TetrominoShape) Initializes a new instance of the ColorImage.Color struct based on a ProjectLCore.GamePieces.TetrominoShape. public Color(TetrominoShape shape) Parameters shape TetrominoShape The shape to derive the color from. Color(int) Initializes a new instance of the ColorImage.Color struct with a specified integer value. public Color(int color) Parameters color int The integer value representing the color. Fields empty Predefined color representing an empty state. public static readonly ColorImage.Color empty Field Value ColorImage.Color fill Predefined color representing a filled state. public static readonly ColorImage.Color fill Field Value ColorImage.Color Methods Equals(Color) Determines whether the current color is equal to another color. public bool Equals(ColorImage.Color other) Parameters other ColorImage.Color The other color to compare with. Returns bool true if the colors are equal; otherwise false. Operators explicit operator Color(TetrominoShape) Explicitly converts a ProjectLCore.GamePieces.TetrominoShape to a ColorImage.Color. public static explicit operator ColorImage.Color(TetrominoShape shape) Parameters shape TetrominoShape The shape to convert. Returns ColorImage.Color implicit operator Color(Color) public static implicit operator Color(ColorImage.Color color) Parameters color ColorImage.Color Returns Color"
  },
  "api/ProjectLCore.GamePieces.ColorImage.html": {
    "href": "api/ProjectLCore.GamePieces.ColorImage.html",
    "title": "Struct ColorImage | Project L Unity",
    "summary": "Struct ColorImage Namespace ProjectLCore.GamePieces Assembly Assembly-CSharp.dll Represents a 5x5 image where each cells has a certain ColorImage.Color. public struct ColorImage Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors ColorImage(BinaryImage) Initializes a new instance of the ColorImage struct based on a ProjectLCore.GamePieces.BinaryImage. Cells which are filled in the binary image are set to fill, while empty cells are set to empty. public ColorImage(BinaryImage image) Parameters image BinaryImage The binary image used to initialize the color image. Methods AddImage(Color, BinaryImage) Adds a binary image to the current color image, overriding the color of cells specified in the binary image with the given color. public ColorImage AddImage(ColorImage.Color color, BinaryImage image) Parameters color ColorImage.Color The color to apply. image BinaryImage The binary image to add to the current color image. Returns ColorImage A new ColorImage with the binary image applied."
  },
  "api/ProjectLCore.GamePieces.ColorPuzzle.html": {
    "href": "api/ProjectLCore.GamePieces.ColorPuzzle.html",
    "title": "Class ColorPuzzle | Project L Unity",
    "summary": "Class ColorPuzzle Namespace ProjectLCore.GamePieces Assembly Assembly-CSharp.dll Represents a puzzle in the game. public class ColorPuzzle : Puzzle Inheritance object Puzzle ColorPuzzle Inherited Members Puzzle._usedTetrominos Puzzle.CanPlaceTetromino(BinaryImage) Puzzle.GetUsedTetrominos() Puzzle.PuzzleNumber Puzzle.Id Puzzle.IsBlack Puzzle.RewardScore Puzzle.RewardTetromino Puzzle.Image Puzzle.NumEmptyCells Puzzle.IsFinished object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ColorPuzzle(BinaryImage, int, TetrominoShape, bool, uint) Initializes a new instance of the ColorPuzzle class. public ColorPuzzle(BinaryImage image, int rewardScore, TetrominoShape rewardTetromino, bool isBlack, uint puzzleNumber) Parameters image BinaryImage The binary image representing the puzzle. rewardScore int The score the player will receive for completing the puzzle. rewardTetromino TetrominoShape The tetromino the player will receive for completing the puzzle. isBlack bool Indicates whether the puzzle is black or white puzzleNumber uint The order number of this puzzle. The file containing the graphics for this puzzle should have the name color-number.png where color is black or white and number is puzzleNumber. Properties ColorImage A ColorImage representing the puzzle. Specifies the color of each cell in the puzzle. public ColorImage ColorImage { get; } Property Value ColorImage Methods AddListener(IColorPuzzleListener) public void AddListener(IColorPuzzleListener listener) Parameters listener IColorPuzzleListener AddTetromino(TetrominoShape, BinaryImage) Places the given tetromino into the puzzle. public override void AddTetromino(TetrominoShape tetromino, BinaryImage position) Parameters tetromino TetrominoShape The shape of the tetromino. position BinaryImage The position of the tetromino. Clone() Clones this instance. public override Puzzle Clone() Returns Puzzle A deep copy of this instance. RemoveListener(IColorPuzzleListener) public void RemoveListener(IColorPuzzleListener listener) Parameters listener IColorPuzzleListener RemoveTetromino(TetrominoShape, BinaryImage) public override void RemoveTetromino(TetrominoShape tetromino, BinaryImage position) Parameters tetromino TetrominoShape position BinaryImage TryGetSprite(out Sprite?) public bool TryGetSprite(out Sprite? sprite) Parameters sprite Sprite Returns bool"
  },
  "api/ProjectLCore.GamePieces.IColorPuzzleListener.html": {
    "href": "api/ProjectLCore.GamePieces.IColorPuzzleListener.html",
    "title": "Interface IColorPuzzleListener | Project L Unity",
    "summary": "Interface IColorPuzzleListener Namespace ProjectLCore.GamePieces Assembly Assembly-CSharp.dll public interface IColorPuzzleListener Methods OnTetrominoPlaced(Color, BinaryImage) void OnTetrominoPlaced(ColorImage.Color color, BinaryImage position) Parameters color ColorImage.Color position BinaryImage OnTetrominoRemoved(Color, BinaryImage) void OnTetrominoRemoved(ColorImage.Color color, BinaryImage position) Parameters color ColorImage.Color position BinaryImage"
  },
  "api/ProjectLCore.GamePieces.html": {
    "href": "api/ProjectLCore.GamePieces.html",
    "title": "Namespace ProjectLCore.GamePieces | Project L Unity",
    "summary": "Namespace ProjectLCore.GamePieces Classes ColorPuzzle Represents a puzzle in the game. Structs ColorImage Represents a 5x5 image where each cells has a certain ColorImage.Color. ColorImage.Color Represents a color. Interfaces IColorPuzzleListener"
  },
  "docs/ai-players.html": {
    "href": "docs/ai-players.html",
    "title": "Animating AI Player Actions | Project L Unity",
    "summary": "Animating AI Player Actions Animating AI player actions is handled by the AIPlayerActionAnimationManager, referred to as AIPAAM. This manager implements the IAsyncActionProcessor interface. When the GameCore processes an action, it checks if the current player is an AI player. If so, it passes the action to AIPAAM, which animates the action and waits until the animation is complete. To animate actions, various classes implement the IAIPlayerActionAnimator generic interface, which defines the AnimateAsync method. The AIPAAM uses these animators to perform the animations. Additionally, several IDisposable helper classes are used to keep the code organized and safe. Example: Animating a ChangeTetrominoAction First, the player needs to click on the Change Tetromino button in the action zone. The AIPAAM uses a ActionZonesManager.DisposableButtonSelector to do so. Then it redirects the job to the PieceZoneManager, which implements the IAIPlayerActionAnimator<ChangeTetrominoAction> interface. It uses two disposables to animate the action. The TetrominoButton.DisposableButtonSelector to visually select the piece to give away and the piece to take. The (private) PieceZoneManager.DisposableButtonHighlighter to highlight the possible trade options. Animating Reward Selection Reward selection is a bit different. With regular actions, the GameSessionManager calls GameAction.AcceptAsync(AIPAAM) before GameCore.ProcessActionAsync(GameAction), so the AIPAAM can animate the action before it is processed and the game graphics respond to it. However, reward selection takes place inside the GameCore.ProcessActionAsync method. When a player completes a puzzle, the GameActionProcessor processing the action calls the player's GetRewardAsync method. This method returns the piece the player wants to take as a reward. We need to animate this selection before the GameCore.ProcessActionAsync method returns — otherwise, the graphics would already reflect the updated game state after the reward is chosen, making the animation ineffective. Thankfully, the Project L Core library provides a bunch of game listener interfaces, one of which is the IPlayerStatePuzzleFinishedAsyncListener. When a puzzle is finished by a player, the OnPuzzleFinishedAsync(FinishedPuzzleInfo) method of all listeners subscribed to his PlayerState is called and awaited. This happens before any changes are made to his PlayerState and the GameState. The AIPAAM implements this interface to animate the reward selection using the PieceZoneManager in a very similar way as with the ChangeTetrominoAction."
  },
  "docs/game-flow.html": {
    "href": "docs/game-flow.html",
    "title": "Graphics Reacting to Player Actions | Project L Unity",
    "summary": "Graphics Reacting to Player Actions When an action is processed by the GameCore, for example when a player takes a new puzzle, the game graphics need to respond to it. The GraphicsManager abstract class provides a way for different types to access the GameCore. The GameGraphicsSystem calls the Init(GameCore) method of all registered GraphicsManagers at the start of the game. They can use it to connect to the game listener interfaces provided by the Project L Core library, which are documented here. For example, the TetrominoCountsColumn, which represents one column in the piece zone, is a ITetrominoCollectionListener because it listens to the changes in the tetromino collection of a player. It is however also a ITetrominoCollectionNotifier because the PieceZoneManager (who is also a ITetrominoCollectionListener) needs to be notified when a tetromino count reaches zero, so that it can gray out the corresponding TetrominoButton."
  },
  "docs/human-players.html": {
    "href": "docs/human-players.html",
    "title": "Creating Human Player Actions | Project L Unity",
    "summary": "Creating Human Player Actions Creating human player actions is the responsibility of the HumanPlayerActionCreationManager, which we will shorten to HPACM. The GameSessionManager registers HumanPlayers to it at the start of the game through the RegisterPlayer(HumanPlayer) method. The HPACM then listens to the ActionRequested and RewardChoiceRequested events of the player. Two enums, PlayerMode and ActionMode, control the action creation logic. Any type that implements the IActionCreationController interface and registers with the HPACM will be notified whenever either mode changes, allowing it to respond appropriately. Action Requested by the GameSessionManager During the game loop, the GameSessionManager calls the Player.GetActionAsync method of a HumanPlayer. This triggers the HumanPlayer.ActionRequested event. As a result, the HPACM is notified and receives an ActionVerifier object. In response, it changes the modes to PlayerMode.Interactive and ActionMode.ActionCreation and connects to the UI buttons using the ActionZonesManager.ConnectToActionButtons(HPACM) method When the user clicks on a button in the action zone, the HPACM will now be notified. User Wants to Take a Certain Action When a user wants to perform an action, certain types need to be notified about the action's creation, cancellation, or confirmation. To receive these notifications, these types implement the generic IHumanPlayerActionCreator interface and register themselves with the HPACM. The HPACM then listens for their ActionModifiedEventHandler events, ensuring it is informed whenever an action changes. Let's say that the user clicked on the Take Puzzle button. The HPACM then calls the OnActionRequested method of all subscribed IHumanPlayerActionCreator<TakePuzzleAction> instances (for example the PuzzleZoneManager) and they can react to it. Modifying the Action When the user somehow changes the action, in our case by clicking on a puzzle button to select it, the PuzzleZoneManager fires the ActionModifiedEventHandler event and the HPACM is notified and receives a TakePuzzleActionModification object. The HPACM internally uses a TakePuzzleActionConstructor to keep track of the current action. After it applies the modification, it calls the constructors TakePuzzleActionConstructor.GetAction method checks if the action is valid using its ActionVerifier tells the ActionZonesManager to enable or disable the Confirm buttons depending on the action validity Confirming the Action If the action was valid, then the Confirm buttons are enabled and if the player clicks on them, the OnActionConfirmed method of the HPACM is called. It in turn calls the OnActionConfirmed method of all subscribed IHumanPlayerActionCreator<TakePuzzleAction> instances sets the player mode back to PlayerMode.NonInteractive disconnects from the action buttons calls the HumanPlayer.SetReward method of the player who requested the action Summary The HPACM acts as a bridge between the game core, UI, and action creation logic. It uses the listener pattern to notify various classes about game state changes. The IActionCreationController interface: Allows classes to control action creation logic. Notifies them when player or action modes change. The IHumanPlayerActionCreator<T> interface: Notifies classes when an action is requested, modified, or confirmed. The HPACM maintains the current action using an ActionConstructor<T>. When an action is modified: IHumanPlayerActionCreator<T> sends an IActionModification<T> to the HPACM. The HPACM checks action validity and enables/disables Confirm buttons. When an action is confirmed: The HPACM calls OnActionConfirmed on all subscribed IHumanPlayerActionCreator<T> instances. Sets player mode back to PlayerMode.NonInteractive. When an action is canceled: The HPACM calls OnActionCanceled on all subscribed IHumanPlayerActionCreator<T> instances. Requesting a Reward When a player completes a puzzle, the GameActionProcessor processing the action calls the player's GetRewardAsync method. This will trigger the HumanPlayer.RewardChoiceRequested event, the HPACM will be notified and the whole process starts again in a very similar fashion."
  },
  "index.html": {
    "href": "index.html",
    "title": "Project L Unity | Project L Unity",
    "summary": "Project L Unity Warning Make sure to have read the Project L Core library documentation first. This documentation is only for the Unity project. Player Selection When the player enters the player selection screen fot the first time, the game will try to load available AI player types specified in the StreamingAssets/aiplayers.ini file. This is the job of the AIPlayerTypesLoader. After the user has creating the game session, data about the selected players is stored in the GameSettings static class. Playing the Game The most high-level class is the GameSessionManager. It is responsible for loading the puzzles from the Resources folder instantiating players based on how they were selected by the user initializing the the AI players initializing the GameCore instance which manages the internal game logic simulating the game loop storing information about how the players played in the GameSummary static class. Challenges There are three interesting problems which need to be solved: Making the graphics respond to actions taken by players Animating actions provided by an AI player Getting actions from a human player The solution heavily relies on the listener pattern, where different components listen to events about changes in the game and update their state accordingly."
  }
}